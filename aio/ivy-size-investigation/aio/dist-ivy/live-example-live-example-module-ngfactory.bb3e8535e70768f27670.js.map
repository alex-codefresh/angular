{"version":3,"sources":["webpack:///./src/app/shared/attribute-utils.ts","webpack:///./src/app/custom-elements/live-example/live-example.component.ts.pre-build-optimizer.js","webpack:///./src/app/custom-elements/live-example/live-example.component.html","webpack:///./src/app/custom-elements/live-example/live-example.component.ts","webpack:///./src/app/custom-elements/live-example/live-example.module.ts","webpack:///./src/app/custom-elements/live-example/live-example.module.ts.pre-build-optimizer.js","webpack:///./src/app/custom-elements/live-example/live-example.module.ngfactory.ts"],"names":["getAttrValue","attrs","attr","key","find","a","hasOwnProperty","toLowerCase","undefined","boolFromValue","attrValue","def","trim","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","LiveExampleComponent_span_4_p_3_Template","rf","ctx","core","ctx_r114","zip","LiveExampleComponent_span_4_Template","ctx_r111","title","stackblitz","enableDownload","_c10","LiveExampleComponent_span_5_Template","ctx_r112","_c11","LiveExampleComponent_span_6_span_3_Template","ctx_r115","LiveExampleComponent_span_6_Template","ctx_r113","_c12","_c13","_c14","_c15","LIVE_EXAMPLE_BASE","document_service","ZIP_BASE","live_example_component_LiveExampleComponent","LiveExampleComponent","elementRef","location","el","attrMap","_i","_a","nativeElement","attributes","length","name","value","getAttrs","exampleDir","this","getExampleDir","path","stackblitzName","getStackblitzName","mode","getMode","getEnableDownload","getStackblitz","getZip","getTitle","prototype","ngAfterContentInit","textContent","content","match","downloadOnly","isEmbedded","zipName","split","ngComponentDef","type","selectors","factory","t","common","viewQuery","_t","first","ngContentSelectors","consts","vars","template","directives","live_example_component_EmbeddedStackblitzComponent","encapsulation","EmbeddedStackblitzComponent","ngAfterViewInit","iframe","src","inputs","styles","live_example_module_LiveExampleModule","LiveExampleModule","customElementComponent","ngModuleDef","ngInjectorDef","imports","__webpack_require__","d","__webpack_exports__","LiveExampleModuleNgFactory"],"mappings":"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","file":"live-example-live-example-module-ngfactory.bb3e8535e70768f27670.js","sourcesContent":["// Utilities for processing HTML element attributes\nimport { ElementRef } from '@angular/core';\n\nexport interface AttrMap {\n  [key: string]: string;\n}\n\n/**\n * Get attribute map from element or ElementRef `attributes`.\n * Attribute map keys are forced lowercase for case-insensitive lookup.\n * @param el The source of the attributes.\n */\nexport function getAttrs(el:  HTMLElement | ElementRef): AttrMap {\n  const attrs: NamedNodeMap = el instanceof ElementRef ? el.nativeElement.attributes : el.attributes;\n  const attrMap: AttrMap = {};\n  for (const attr of attrs as any as Attr[] /* cast due to https://github.com/Microsoft/TypeScript/issues/2695 */) {\n    attrMap[attr.name.toLowerCase()] = attr.value;\n  }\n  return attrMap;\n}\n\n/**\n * Return the attribute that matches `attr`.\n * @param attr Name of the attribute or a string of candidate attribute names.\n */\nexport function getAttrValue(attrs: AttrMap, attr: string | string[]): string | undefined {\n  const key = (typeof attr === 'string')\n      ? attr\n      : attr.find(a => attrs.hasOwnProperty(a.toLowerCase()));\n\n  return (key === undefined) ? undefined : attrs[key.toLowerCase()];\n}\n\n/**\n * Return the boolean state of an attribute value (if supplied)\n * @param attrValue The string value of some attribute (or undefined if attribute not present).\n * @param def Default boolean value when attribute is undefined.\n */\nexport function boolFromValue(attrValue: string | undefined, def: boolean = false) {\n  return attrValue === undefined ? def : attrValue.trim() !== 'false';\n}\n\n/**\n * Return the boolean state of attribute from an element\n * @param el The source of the attributes.\n * @param atty Name of the attribute or a string of candidate attribute names.\n * @param def Default boolean value when attribute is undefined.\n */\nexport function getBoolFromAttribute(\n  el:  HTMLElement | ElementRef,\n  attr: string | string[],\n  def: boolean = false): boolean {\n  return boolFromValue(getAttrValue(getAttrs(el), attr), def);\n}\n","/* tslint:disable component-selector */\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nimport { boolFromValue, getAttrs, getAttrValue } from 'app/shared/attribute-utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nvar _c0 = [\"content\"];\nvar _c1 = [2, \"display\", \"none\"];\nvar _c2 = [\"content\", \"\"];\nvar _c3 = [3, \"ngSwitch\"];\nvar _c4 = [4, \"ngSwitchCase\"];\nvar _c5 = [4, \"ngSwitchDefault\"];\nvar _c6 = [3, \"title\"];\nvar _c7 = [3, \"src\"];\nvar _c8 = [4, \"ngIf\"];\nvar _c9 = [\"download\", \"\", \"title\", \"Download example\", 3, \"href\"];\nfunction LiveExampleComponent_span_4_p_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵelementStart(0, \"p\");\n    i0.ɵtext(1, \" You can also \");\n    i0.ɵelementStart(2, \"a\", _c9);\n    i0.ɵtext(3, \"download this example\");\n    i0.ɵelementEnd();\n    i0.ɵtext(4, \". \");\n    i0.ɵelementEnd();\n} if (rf & 2) {\n    var ctx_r114 = i0.ɵnextContext(2);\n    i0.ɵselect(2);\n    i0.ɵelementProperty(2, \"href\", i0.ɵbind(ctx_r114.zip), i0.ɵsanitizeUrl);\n} }\nfunction LiveExampleComponent_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵelementStart(0, \"span\");\n    i0.ɵelementStart(1, \"div\", _c6);\n    i0.ɵelement(2, \"aio-embedded-stackblitz\", _c7);\n    i0.ɵelementEnd();\n    i0.ɵtemplate(3, LiveExampleComponent_span_4_p_3_Template, 5, 1, \"p\", _c8);\n    i0.ɵelementEnd();\n} if (rf & 2) {\n    var ctx_r111 = i0.ɵnextContext();\n    i0.ɵselect(1);\n    i0.ɵelementProperty(1, \"title\", i0.ɵinterpolation1(\"\", ctx_r111.title, \"\"));\n    i0.ɵselect(2);\n    i0.ɵelementProperty(2, \"src\", i0.ɵbind(ctx_r111.stackblitz));\n    i0.ɵselect(3);\n    i0.ɵelementProperty(3, \"ngIf\", i0.ɵbind(ctx_r111.enableDownload));\n} }\nvar _c10 = [\"download\", \"\", 3, \"href\", \"title\"];\nfunction LiveExampleComponent_span_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵelementStart(0, \"span\");\n    i0.ɵelementStart(1, \"a\", _c10);\n    i0.ɵtext(2);\n    i0.ɵelementEnd();\n    i0.ɵelementEnd();\n} if (rf & 2) {\n    var ctx_r112 = i0.ɵnextContext();\n    i0.ɵselect(1);\n    i0.ɵelementProperty(1, \"href\", i0.ɵbind(ctx_r112.zip), i0.ɵsanitizeUrl);\n    i0.ɵelementProperty(1, \"title\", i0.ɵinterpolation1(\"\", ctx_r112.title, \"\"));\n    i0.ɵselect(2);\n    i0.ɵtextBinding(2, i0.ɵinterpolation1(\"\", ctx_r112.title, \"\"));\n} }\nvar _c11 = [\"target\", \"_blank\", 3, \"href\", \"title\"];\nfunction LiveExampleComponent_span_6_span_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵelementStart(0, \"span\");\n    i0.ɵtext(1, \" / \");\n    i0.ɵelementStart(2, \"a\", _c9);\n    i0.ɵtext(3, \"download example\");\n    i0.ɵelementEnd();\n    i0.ɵelementEnd();\n} if (rf & 2) {\n    var ctx_r115 = i0.ɵnextContext(2);\n    i0.ɵselect(2);\n    i0.ɵelementProperty(2, \"href\", i0.ɵbind(ctx_r115.zip), i0.ɵsanitizeUrl);\n} }\nfunction LiveExampleComponent_span_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵelementStart(0, \"span\");\n    i0.ɵelementStart(1, \"a\", _c11);\n    i0.ɵtext(2);\n    i0.ɵelementEnd();\n    i0.ɵtemplate(3, LiveExampleComponent_span_6_span_3_Template, 4, 1, \"span\", _c8);\n    i0.ɵelementEnd();\n} if (rf & 2) {\n    var ctx_r113 = i0.ɵnextContext();\n    i0.ɵselect(1);\n    i0.ɵelementProperty(1, \"href\", i0.ɵbind(ctx_r113.stackblitz), i0.ɵsanitizeUrl);\n    i0.ɵelementProperty(1, \"title\", i0.ɵinterpolation1(\"\", ctx_r113.title, \"\"));\n    i0.ɵselect(2);\n    i0.ɵtextBinding(2, i0.ɵinterpolation1(\"\", ctx_r113.title, \"\"));\n    i0.ɵselect(3);\n    i0.ɵelementProperty(3, \"ngIf\", i0.ɵbind(ctx_r113.enableDownload));\n} }\nvar _c12 = [];\nvar _c13 = [\"iframe\"];\nvar _c14 = [\"frameborder\", \"0\", \"width\", \"100%\", \"height\", \"100%\"];\nvar _c15 = [\"iframe\", \"\"];\nvar LIVE_EXAMPLE_BASE = CONTENT_URL_PREFIX + 'live-examples/';\nvar ZIP_BASE = CONTENT_URL_PREFIX + 'zips/';\n/**\n * Angular.io Live Example Embedded Component\n *\n * Renders a link to a live/host example of the doc page.\n *\n * All attributes and the text content are optional\n *\n * Usage:\n *   <live-example\n *      [name=\"...\"]        // name of the example directory\n *      [stackblitz=\"...\"\"] // name of the stackblitz file (becomes part of zip file name as well)\n *      [embedded]          // embed the stackblitz in the doc page, else display in new browser tab (default)\n *      [noDownload]        // no downloadable zip option\n *      [downloadOnly]      // just the zip\n *      [title=\"...\"]>      // text for live example link and tooltip\n *        text              // higher precedence way to specify text for live example link and tooltip\n *  </live-example>\n * Example:\n *   <p>Run <live-example>Try the live example</live-example></p>.\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   <p>Run <live-example name=\"toh-pt1\">this example</live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   // Link to the default stackblitz in the toh-pt1 sample\n *   // The title overrides default (\"live example\") with \"Tour of Heroes - Part 1\"\n *   <p>Run <live-example name=\"toh-pt1\" title=\"Tour of Heroes - Part 1\"></live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   <p>Run <live-example stackblitz=\"minimal\"></live-example></p>.\n *   // ~/resources/live-examples/{page}/minimal.stackblitz.json\n *\n *   // Embed the current page's default stackblitz\n *   // Text within tag is \"live example\"\n *   // No title (no tooltip)\n *   <live-example embedded title=\"\"></live-example>\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   // Displays within the document page as an embedded style stackblitz editor\n *   <live-example name=\"toh-pt1\" embedded stackblitz=\"minimal\">Tour of Heroes - Part 1</live-example>\n *   // ~/resources/live-examples/toh-pt1/minimal.stackblitz.json\n */\nvar LiveExampleComponent = /** @class */ (function () {\n    function LiveExampleComponent(elementRef, location) {\n        var attrs = getAttrs(elementRef);\n        var exampleDir = this.getExampleDir(attrs, location.path(false));\n        var stackblitzName = this.getStackblitzName(attrs);\n        this.mode = this.getMode(attrs);\n        this.enableDownload = this.getEnableDownload(attrs);\n        this.stackblitz = this.getStackblitz(exampleDir, stackblitzName, this.mode === 'embedded');\n        this.zip = this.getZip(exampleDir, stackblitzName);\n        this.title = this.getTitle(attrs);\n    }\n    LiveExampleComponent.prototype.ngAfterContentInit = function () {\n        // Angular will sanitize this title when displayed, so it should be plain text.\n        var textContent = this.content.nativeElement.textContent.trim();\n        if (textContent) {\n            this.title = textContent;\n        }\n    };\n    LiveExampleComponent.prototype.getEnableDownload = function (attrs) {\n        var downloadDisabled = boolFromValue(getAttrValue(attrs, 'noDownload'));\n        return !downloadDisabled;\n    };\n    LiveExampleComponent.prototype.getExampleDir = function (attrs, path) {\n        var exampleDir = getAttrValue(attrs, 'name');\n        if (!exampleDir) {\n            // Take the last path segment, excluding query params and hash fragment.\n            var match = path.match(/[^/?#]+(?=\\/?(?:\\?|#|$))/);\n            exampleDir = match ? match[0] : 'index';\n        }\n        return exampleDir.trim();\n    };\n    LiveExampleComponent.prototype.getMode = function (attrs) {\n        var downloadOnly = boolFromValue(getAttrValue(attrs, 'downloadOnly'));\n        var isEmbedded = boolFromValue(getAttrValue(attrs, 'embedded'));\n        return downloadOnly ? 'downloadOnly'\n            : isEmbedded ? 'embedded' :\n                'default';\n    };\n    LiveExampleComponent.prototype.getStackblitz = function (exampleDir, stackblitzName, isEmbedded) {\n        var urlQuery = isEmbedded ? '?ctl=1' : '';\n        return \"\" + LIVE_EXAMPLE_BASE + exampleDir + \"/\" + stackblitzName + \"stackblitz.html\" + urlQuery;\n    };\n    LiveExampleComponent.prototype.getStackblitzName = function (attrs) {\n        var attrValue = (getAttrValue(attrs, 'stackblitz') || '').trim();\n        return attrValue && attrValue + \".\";\n    };\n    LiveExampleComponent.prototype.getTitle = function (attrs) {\n        return (getAttrValue(attrs, 'title') || 'live example').trim();\n    };\n    LiveExampleComponent.prototype.getZip = function (exampleDir, stackblitzName) {\n        var zipName = exampleDir.split('/')[0];\n        return \"\" + ZIP_BASE + exampleDir + \"/\" + stackblitzName + zipName + \".zip\";\n    };\n    LiveExampleComponent.ngComponentDef = i0.ɵdefineComponent({ type: LiveExampleComponent, selectors: [[\"live-example\"]], factory: function LiveExampleComponent_Factory(t) { return new (t || LiveExampleComponent)(i0.ɵdirectiveInject(i0.ElementRef), i0.ɵdirectiveInject(i1.Location)); }, viewQuery: function LiveExampleComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵviewQuery(_c0, true, null);\n        } if (rf & 2) {\n            var _t;\n            (i0.ɵqueryRefresh((_t = i0.ɵloadViewQuery())) && (ctx.content = _t.first));\n        } }, ngContentSelectors: _c12, consts: 7, vars: 3, template: function LiveExampleComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵprojectionDef();\n            i0.ɵelementStart(0, \"span\", _c1, _c2);\n            i0.ɵprojection(2);\n            i0.ɵelementEnd();\n            i0.ɵelementStart(3, \"span\", _c3);\n            i0.ɵtemplate(4, LiveExampleComponent_span_4_Template, 4, 3, \"span\", _c4);\n            i0.ɵtemplate(5, LiveExampleComponent_span_5_Template, 3, 3, \"span\", _c4);\n            i0.ɵtemplate(6, LiveExampleComponent_span_6_Template, 4, 4, \"span\", _c5);\n            i0.ɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵselect(3);\n            i0.ɵelementProperty(3, \"ngSwitch\", i0.ɵbind(ctx.mode));\n            i0.ɵselect(4);\n            i0.ɵelementProperty(4, \"ngSwitchCase\", i0.ɵbind(\"embedded\"));\n            i0.ɵselect(5);\n            i0.ɵelementProperty(5, \"ngSwitchCase\", i0.ɵbind(\"downloadOnly\"));\n        } }, directives: function () { return [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, EmbeddedStackblitzComponent, i1.NgIf]; }, encapsulation: 2 });\n    return LiveExampleComponent;\n}());\nexport { LiveExampleComponent };\n/*@__PURE__*/ i0.ɵsetClassMetadata(LiveExampleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'live-example',\n                templateUrl: 'live-example.component.html'\n            }]\n    }], function () { return [{ type: i0.ElementRef }, { type: i1.Location }]; }, { content: [{\n            type: ViewChild,\n            args: ['content']\n        }] });\n///// EmbeddedStackblitzComponent ///\n/**\n * Hides the <iframe> so we can test LiveExampleComponent without actually triggering\n * a call to stackblitz to load the iframe\n */\nvar EmbeddedStackblitzComponent = /** @class */ (function () {\n    function EmbeddedStackblitzComponent() {\n    }\n    EmbeddedStackblitzComponent.prototype.ngAfterViewInit = function () {\n        // DEVELOPMENT TESTING ONLY\n        // this.src = 'https://angular.io/resources/live-examples/quickstart/ts/stackblitz.json';\n        if (this.iframe) {\n            // security: the `src` is always authored by the documentation team\n            // and is considered to be safe\n            this.iframe.nativeElement.src = this.src;\n        }\n    };\n    EmbeddedStackblitzComponent.ngComponentDef = i0.ɵdefineComponent({ type: EmbeddedStackblitzComponent, selectors: [[\"aio-embedded-stackblitz\"]], factory: function EmbeddedStackblitzComponent_Factory(t) { return new (t || EmbeddedStackblitzComponent)(); }, viewQuery: function EmbeddedStackblitzComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵviewQuery(_c13, true, null);\n        } if (rf & 2) {\n            var _t;\n            (i0.ɵqueryRefresh((_t = i0.ɵloadViewQuery())) && (ctx.iframe = _t.first));\n        } }, inputs: { src: \"src\" }, consts: 2, vars: 0, template: function EmbeddedStackblitzComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵelement(0, \"iframe\", _c14, _c15);\n        } }, styles: [\"iframe[_ngcontent-%COMP%] { min-height: 400px; }\"] });\n    return EmbeddedStackblitzComponent;\n}());\nexport { EmbeddedStackblitzComponent };\n/*@__PURE__*/ i0.ɵsetClassMetadata(EmbeddedStackblitzComponent, [{\n        type: Component,\n        args: [{\n                selector: 'aio-embedded-stackblitz',\n                template: \"<iframe #iframe frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe>\",\n                styles: ['iframe { min-height: 400px; }']\n            }]\n    }], null, { src: [{\n            type: Input\n        }], iframe: [{\n            type: ViewChild,\n            args: ['iframe']\n        }] });\n","<!-- Content projection is used to get the content HTML provided to the component. -->\n<span #content style=\"display: none\"><ng-content></ng-content></span>\n\n<span [ngSwitch]=\"mode\">\n  <span *ngSwitchCase=\"'embedded'\">\n    <div title=\"{{title}}\">\n      <aio-embedded-stackblitz [src]=\"stackblitz\"></aio-embedded-stackblitz>\n    </div>\n    <p *ngIf=\"enableDownload\">\n      You can also <a [href]=\"zip\" download title=\"Download example\">download this example</a>.\n    </p>\n  </span>\n  <span *ngSwitchCase=\"'downloadOnly'\">\n    <a [href]=\"zip\" download title=\"{{title}}\">{{title}}</a>\n  </span>\n  <span *ngSwitchDefault>\n    <a [href]=\"stackblitz\" target=\"_blank\" title=\"{{title}}\">{{title}}</a>\n    <span *ngIf=\"enableDownload\">\n      / <a [href]=\"zip\" download title=\"Download example\">download example</a>\n    </span>\n  </span>\n</span>\n","/* tslint:disable component-selector */\nimport { AfterContentInit, AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nimport { AttrMap, boolFromValue, getAttrs, getAttrValue } from 'app/shared/attribute-utils';\n\n\nconst LIVE_EXAMPLE_BASE = CONTENT_URL_PREFIX + 'live-examples/';\nconst ZIP_BASE = CONTENT_URL_PREFIX + 'zips/';\n\n/**\n * Angular.io Live Example Embedded Component\n *\n * Renders a link to a live/host example of the doc page.\n *\n * All attributes and the text content are optional\n *\n * Usage:\n *   <live-example\n *      [name=\"...\"]        // name of the example directory\n *      [stackblitz=\"...\"\"] // name of the stackblitz file (becomes part of zip file name as well)\n *      [embedded]          // embed the stackblitz in the doc page, else display in new browser tab (default)\n *      [noDownload]        // no downloadable zip option\n *      [downloadOnly]      // just the zip\n *      [title=\"...\"]>      // text for live example link and tooltip\n *        text              // higher precedence way to specify text for live example link and tooltip\n *  </live-example>\n * Example:\n *   <p>Run <live-example>Try the live example</live-example></p>.\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   <p>Run <live-example name=\"toh-pt1\">this example</live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   // Link to the default stackblitz in the toh-pt1 sample\n *   // The title overrides default (\"live example\") with \"Tour of Heroes - Part 1\"\n *   <p>Run <live-example name=\"toh-pt1\" title=\"Tour of Heroes - Part 1\"></live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   <p>Run <live-example stackblitz=\"minimal\"></live-example></p>.\n *   // ~/resources/live-examples/{page}/minimal.stackblitz.json\n *\n *   // Embed the current page's default stackblitz\n *   // Text within tag is \"live example\"\n *   // No title (no tooltip)\n *   <live-example embedded title=\"\"></live-example>\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   // Displays within the document page as an embedded style stackblitz editor\n *   <live-example name=\"toh-pt1\" embedded stackblitz=\"minimal\">Tour of Heroes - Part 1</live-example>\n *   // ~/resources/live-examples/toh-pt1/minimal.stackblitz.json\n */\n@Component({\n  selector: 'live-example',\n  templateUrl: 'live-example.component.html'\n})\nexport class LiveExampleComponent implements AfterContentInit {\n\n  readonly mode: 'default' | 'embedded' | 'downloadOnly';\n  readonly enableDownload: boolean;\n  readonly stackblitz: string;\n  readonly zip: string;\n  title: string;\n\n  @ViewChild('content')\n  private content: ElementRef;\n\n  constructor(elementRef: ElementRef, location: Location) {\n    const attrs = getAttrs(elementRef);\n    const exampleDir = this.getExampleDir(attrs, location.path(false));\n    const stackblitzName = this.getStackblitzName(attrs);\n\n    this.mode = this.getMode(attrs);\n    this.enableDownload = this.getEnableDownload(attrs);\n    this.stackblitz = this.getStackblitz(exampleDir, stackblitzName, this.mode === 'embedded');\n    this.zip = this.getZip(exampleDir, stackblitzName);\n    this.title = this.getTitle(attrs);\n  }\n\n  ngAfterContentInit() {\n    // Angular will sanitize this title when displayed, so it should be plain text.\n    const textContent = this.content.nativeElement.textContent.trim();\n    if (textContent) {\n      this.title = textContent;\n    }\n  }\n\n  private getEnableDownload(attrs: AttrMap) {\n    const downloadDisabled = boolFromValue(getAttrValue(attrs, 'noDownload'));\n    return !downloadDisabled;\n  }\n\n  private getExampleDir(attrs: AttrMap, path: string) {\n    let exampleDir = getAttrValue(attrs, 'name');\n    if (!exampleDir) {\n      // Take the last path segment, excluding query params and hash fragment.\n      const match = path.match(/[^/?#]+(?=\\/?(?:\\?|#|$))/);\n      exampleDir = match ? match[0] : 'index';\n    }\n    return exampleDir.trim();\n  }\n\n  private getMode(this: LiveExampleComponent, attrs: AttrMap): typeof this.mode {\n    const downloadOnly = boolFromValue(getAttrValue(attrs, 'downloadOnly'));\n    const isEmbedded = boolFromValue(getAttrValue(attrs, 'embedded'));\n\n    return downloadOnly ? 'downloadOnly'\n           : isEmbedded ? 'embedded' :\n                          'default';\n  }\n\n  private getStackblitz(exampleDir: string, stackblitzName: string, isEmbedded: boolean) {\n    const urlQuery = isEmbedded ? '?ctl=1' : '';\n    return `${LIVE_EXAMPLE_BASE}${exampleDir}/${stackblitzName}stackblitz.html${urlQuery}`;\n  }\n\n  private getStackblitzName(attrs: AttrMap) {\n    const attrValue = (getAttrValue(attrs, 'stackblitz') || '').trim();\n    return attrValue && `${attrValue}.`;\n  }\n\n  private getTitle(attrs: AttrMap) {\n    return (getAttrValue(attrs, 'title') || 'live example').trim();\n  }\n\n  private getZip(exampleDir: string, stackblitzName: string) {\n    const zipName = exampleDir.split('/')[0];\n    return `${ZIP_BASE}${exampleDir}/${stackblitzName}${zipName}.zip`;\n  }\n}\n\n///// EmbeddedStackblitzComponent ///\n/**\n * Hides the <iframe> so we can test LiveExampleComponent without actually triggering\n * a call to stackblitz to load the iframe\n */\n@Component({\n  selector: 'aio-embedded-stackblitz',\n  template: `<iframe #iframe frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe>`,\n  styles: [ 'iframe { min-height: 400px; }' ]\n})\nexport class EmbeddedStackblitzComponent implements AfterViewInit {\n  @Input() src: string;\n\n  @ViewChild('iframe') iframe: ElementRef;\n\n  ngAfterViewInit() {\n    // DEVELOPMENT TESTING ONLY\n    // this.src = 'https://angular.io/resources/live-examples/quickstart/ts/stackblitz.json';\n\n    if (this.iframe) {\n      // security: the `src` is always authored by the documentation team\n      // and is considered to be safe\n      this.iframe.nativeElement.src = this.src;\n    }\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmbeddedStackblitzComponent, LiveExampleComponent } from './live-example.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ LiveExampleComponent, EmbeddedStackblitzComponent ],\n  entryComponents: [ LiveExampleComponent ]\n})\nexport class LiveExampleModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = LiveExampleComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmbeddedStackblitzComponent, LiveExampleComponent } from './live-example.component';\nimport * as i0 from \"@angular/core\";\nvar LiveExampleModule = /** @class */ (function () {\n    function LiveExampleModule() {\n        this.customElementComponent = LiveExampleComponent;\n    }\n    LiveExampleModule.ngModuleDef = i0.ɵdefineNgModule({ type: LiveExampleModule });\n    LiveExampleModule.ngInjectorDef = i0.defineInjector({ factory: function LiveExampleModule_Factory(t) { return new (t || LiveExampleModule)(); }, imports: [[CommonModule]] });\n    return LiveExampleModule;\n}());\nexport { LiveExampleModule };\n/*@__PURE__*/ i0.ɵsetNgModuleScope(LiveExampleModule, { declarations: [LiveExampleComponent, EmbeddedStackblitzComponent], imports: [CommonModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(LiveExampleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [LiveExampleComponent, EmbeddedStackblitzComponent],\n                entryComponents: [LiveExampleComponent]\n            }]\n    }], null, null);\n","import * as i0 from '@angular/core';\nimport {LiveExampleModule} from './live-example.module';\nexport const LiveExampleModuleNgFactory = new i0.ɵNgModuleFactory(LiveExampleModule);\nexport const ɵNonEmptyModule = true;"],"sourceRoot":""}