{"version":3,"sources":["webpack:///./src/app/custom-elements/code/code-example.component.ts.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-example.component.ts","webpack:///./src/app/custom-elements/code/code-example.module.ts","webpack:///./src/app/custom-elements/code/code-example.module.ts.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-example.module.ngfactory.ts"],"names":["_c0","_c1","_c2","_c3","_c4","_c5","CodeExampleComponent_header_3_Template","rf","ctx","core","ctx_r87","header","_c6","code_example_component_CodeExampleComponent","CodeExampleComponent","this","_path","isAvoid","Object","defineProperty","prototype","get","_header","set","classes","headed-code","simple-code","enumerable","configurable","path","indexOf","_hidecopy","hidecopy","ngAfterViewInit","aioCode","code","content","nativeElement","innerHTML","ngComponentDef","type","selectors","factory","t","viewQuery","_t","code_component","first","hostBindings","elIndex","inputs","language","linenums","region","hyphenatedHideCopy","capitalizedHideCopy","ngContentSelectors","consts","vars","template","directives","common","encapsulation","code_example_module_CodeExampleModule","CodeExampleModule","customElementComponent","ngModuleDef","ngInjectorDef","imports","code_module","__webpack_require__","d","__webpack_exports__","CodeExampleModuleNgFactory"],"mappings":"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","file":"code-code-example-module-ngfactory.62ed46612e2da5cdc451.js","sourcesContent":["/* tslint:disable component-selector */\nimport { Component, HostBinding, ElementRef, ViewChild, Input } from '@angular/core';\nimport { CodeComponent } from './code.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./code.component\";\nvar _c0 = [\"content\"];\nvar _c1 = [\"avoidFile\"];\nvar _c2 = [2, \"display\", \"none\"];\nvar _c3 = [\"content\", \"\"];\nvar _c4 = [4, \"ngIf\"];\nvar _c5 = [3, \"ngClass\", \"language\", \"linenums\", \"path\", \"region\", \"hideCopy\", \"header\"];\nfunction CodeExampleComponent_header_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵelementStart(0, \"header\");\n    i0.ɵtext(1);\n    i0.ɵelementEnd();\n} if (rf & 2) {\n    var ctx_r87 = i0.ɵnextContext();\n    i0.ɵselect(1);\n    i0.ɵtextBinding(1, i0.ɵinterpolation1(\"\", ctx_r87.header, \"\"));\n} }\nvar _c6 = [];\n/**\n * An embeddable code block that displays nicely formatted code.\n * Example usage:\n *\n * ```\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\n * // a code block\n * console.log('do stuff');\n * </code-example>\n * ```\n */\nvar CodeExampleComponent = /** @class */ (function () {\n    function CodeExampleComponent() {\n        this._path = '';\n        this.isAvoid = false;\n    }\n    Object.defineProperty(CodeExampleComponent.prototype, \"header\", {\n        get: function () { return this._header; },\n        set: function (header) {\n            this._header = header;\n            this.classes = {\n                'headed-code': !!this.header,\n                'simple-code': !this.header,\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CodeExampleComponent.prototype, \"path\", {\n        get: function () { return this._path; },\n        set: function (path) {\n            this._path = path;\n            this.isAvoid = this.path.indexOf('.avoid.') !== -1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CodeExampleComponent.prototype, \"hidecopy\", {\n        get: function () { return this._hidecopy; },\n        set: function (hidecopy) {\n            // Coerce the boolean value.\n            this._hidecopy = hidecopy != null && \"\" + hidecopy !== 'false';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CodeExampleComponent.prototype, \"hyphenatedHideCopy\", {\n        set: function (hidecopy) {\n            this.hidecopy = hidecopy;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CodeExampleComponent.prototype, \"capitalizedHideCopy\", {\n        set: function (hidecopy) {\n            this.hidecopy = hidecopy;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CodeExampleComponent.prototype.ngAfterViewInit = function () {\n        this.aioCode.code = this.content.nativeElement.innerHTML;\n    };\n    CodeExampleComponent.ngComponentDef = i0.ɵdefineComponent({ type: CodeExampleComponent, selectors: [[\"code-example\"]], factory: function CodeExampleComponent_Factory(t) { return new (t || CodeExampleComponent)(); }, viewQuery: function CodeExampleComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵviewQuery(_c0, true, null);\n            i0.ɵviewQuery(CodeComponent, true, null);\n        } if (rf & 2) {\n            var _t;\n            (i0.ɵqueryRefresh((_t = i0.ɵloadViewQuery())) && (ctx.content = _t.first));\n            (i0.ɵqueryRefresh((_t = i0.ɵloadViewQuery())) && (ctx.aioCode = _t.first));\n        } }, hostBindings: function CodeExampleComponent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n            i0.ɵelementHostStyling(_c1);\n        } if (rf & 2) {\n            i0.ɵelementHostClassProp(0, ctx.isAvoid);\n            i0.ɵelementHostStylingApply();\n        } }, inputs: { language: \"language\", linenums: \"linenums\", region: \"region\", header: \"header\", path: \"path\", hidecopy: \"hidecopy\", hyphenatedHideCopy: [\"hide-copy\", \"hyphenatedHideCopy\"], capitalizedHideCopy: [\"hideCopy\", \"capitalizedHideCopy\"] }, ngContentSelectors: _c6, consts: 5, vars: 8, template: function CodeExampleComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵprojectionDef();\n            i0.ɵelementStart(0, \"div\", _c2, _c3);\n            i0.ɵprojection(2);\n            i0.ɵelementEnd();\n            i0.ɵtemplate(3, CodeExampleComponent_header_3_Template, 2, 1, \"header\", _c4);\n            i0.ɵelement(4, \"aio-code\", _c5);\n        } if (rf & 2) {\n            i0.ɵselect(3);\n            i0.ɵelementProperty(3, \"ngIf\", i0.ɵbind(ctx.header));\n            i0.ɵselect(4);\n            i0.ɵelementProperty(4, \"ngClass\", i0.ɵbind(ctx.classes));\n            i0.ɵelementProperty(4, \"language\", i0.ɵbind(ctx.language));\n            i0.ɵelementProperty(4, \"linenums\", i0.ɵbind(ctx.linenums));\n            i0.ɵelementProperty(4, \"path\", i0.ɵbind(ctx.path));\n            i0.ɵelementProperty(4, \"region\", i0.ɵbind(ctx.region));\n            i0.ɵelementProperty(4, \"hideCopy\", i0.ɵbind(ctx.hidecopy));\n            i0.ɵelementProperty(4, \"header\", i0.ɵbind(ctx.header));\n        } }, directives: [i1.NgIf, i2.CodeComponent, i1.NgClass], encapsulation: 2 });\n    return CodeExampleComponent;\n}());\nexport { CodeExampleComponent };\n/*@__PURE__*/ i0.ɵsetClassMetadata(CodeExampleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'code-example',\n                template: \"\\n    <!-- Content projection is used to get the content HTML provided to this component -->\\n    <div #content style=\\\"display: none\\\"><ng-content></ng-content></div>\\n\\n    <header *ngIf=\\\"header\\\">{{header}}</header>\\n\\n    <aio-code [ngClass]=\\\"classes\\\"\\n              [language]=\\\"language\\\"\\n              [linenums]=\\\"linenums\\\"\\n              [path]=\\\"path\\\"\\n              [region]=\\\"region\\\"\\n              [hideCopy]=\\\"hidecopy\\\"\\n              [header]=\\\"header\\\">\\n    </aio-code>\\n  \",\n            }]\n    }], null, { language: [{\n            type: Input\n        }], linenums: [{\n            type: Input\n        }], region: [{\n            type: Input\n        }], header: [{\n            type: Input\n        }], path: [{\n            type: Input\n        }], hidecopy: [{\n            type: Input\n        }], hyphenatedHideCopy: [{\n            type: Input,\n            args: ['hide-copy']\n        }], capitalizedHideCopy: [{\n            type: Input,\n            args: ['hideCopy']\n        }], isAvoid: [{\n            type: HostBinding,\n            args: ['class.avoidFile']\n        }], content: [{\n            type: ViewChild,\n            args: ['content']\n        }], aioCode: [{\n            type: ViewChild,\n            args: [CodeComponent]\n        }] });\n","/* tslint:disable component-selector */\nimport { Component, HostBinding, ElementRef, ViewChild, Input, AfterViewInit } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\n/**\n * An embeddable code block that displays nicely formatted code.\n * Example usage:\n *\n * ```\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\n * // a code block\n * console.log('do stuff');\n * </code-example>\n * ```\n */\n@Component({\n  selector: 'code-example',\n  template: `\n    <!-- Content projection is used to get the content HTML provided to this component -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <header *ngIf=\"header\">{{header}}</header>\n\n    <aio-code [ngClass]=\"classes\"\n              [language]=\"language\"\n              [linenums]=\"linenums\"\n              [path]=\"path\"\n              [region]=\"region\"\n              [hideCopy]=\"hidecopy\"\n              [header]=\"header\">\n    </aio-code>\n  `,\n})\nexport class CodeExampleComponent implements AfterViewInit {\n  classes: {};\n\n  @Input() language: string;\n\n  @Input() linenums: string;\n\n  @Input() region: string;\n\n  @Input()\n  set header(header: string) {\n    this._header = header;\n    this.classes = {\n      'headed-code': !!this.header,\n      'simple-code': !this.header,\n    };\n  }\n  get header(): string { return this._header; }\n  private _header: string;\n\n  @Input()\n  set path(path: string) {\n    this._path = path;\n    this.isAvoid = this.path.indexOf('.avoid.') !== -1;\n  }\n  get path(): string { return this._path; }\n  private _path = '';\n\n  @Input()\n  set hidecopy(hidecopy: boolean) {\n    // Coerce the boolean value.\n    this._hidecopy = hidecopy != null && `${hidecopy}` !== 'false';\n  }\n  get hidecopy(): boolean { return this._hidecopy; }\n  private _hidecopy: boolean;\n\n  @Input('hide-copy')\n  set hyphenatedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  @Input('hideCopy')\n  set capitalizedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  @HostBinding('class.avoidFile') isAvoid = false;\n\n  @ViewChild('content') content: ElementRef;\n\n  @ViewChild(CodeComponent) aioCode: CodeComponent;\n\n  ngAfterViewInit() {\n    this.aioCode.code = this.content.nativeElement.innerHTML;\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeExampleComponent } from './code-example.component';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, CodeModule ],\n  declarations: [ CodeExampleComponent ],\n  exports: [ CodeExampleComponent ],\n  entryComponents: [ CodeExampleComponent ]\n})\nexport class CodeExampleModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeExampleComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeExampleComponent } from './code-example.component';\nimport { CodeModule } from './code.module';\nimport * as i0 from \"@angular/core\";\nvar CodeExampleModule = /** @class */ (function () {\n    function CodeExampleModule() {\n        this.customElementComponent = CodeExampleComponent;\n    }\n    CodeExampleModule.ngModuleDef = i0.ɵdefineNgModule({ type: CodeExampleModule });\n    CodeExampleModule.ngInjectorDef = i0.defineInjector({ factory: function CodeExampleModule_Factory(t) { return new (t || CodeExampleModule)(); }, imports: [[CommonModule, CodeModule]] });\n    return CodeExampleModule;\n}());\nexport { CodeExampleModule };\n/*@__PURE__*/ i0.ɵsetNgModuleScope(CodeExampleModule, { declarations: [CodeExampleComponent], imports: [CommonModule, CodeModule], exports: [CodeExampleComponent] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(CodeExampleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CodeModule],\n                declarations: [CodeExampleComponent],\n                exports: [CodeExampleComponent],\n                entryComponents: [CodeExampleComponent]\n            }]\n    }], null, null);\n","import * as i0 from '@angular/core';\nimport {CodeExampleModule} from './code-example.module';\nexport const CodeExampleModuleNgFactory = new i0.ɵNgModuleFactory(CodeExampleModule);\nexport const ɵNonEmptyModule = true;"],"sourceRoot":""}