{"version":3,"sources":["webpack:///./src/app/custom-elements/announcement-bar/announcement-bar.component.ts.pre-build-optimizer.js","webpack:///./src/app/custom-elements/announcement-bar/announcement-bar.component.ts","webpack:///./src/app/custom-elements/announcement-bar/announcement-bar.module.ts","webpack:///./src/app/custom-elements/announcement-bar/announcement-bar.module.ts.pre-build-optimizer.js","webpack:///./src/app/custom-elements/announcement-bar/announcement-bar.module.ngfactory.ts"],"names":["_c0","_c1","_c2","_c3","_c4","_c5","AnnouncementBarComponent_div_0_Template","rf","ctx","core","ctx_r72","announcement","imageUrl","message","linkUrl","announcementsPath","document_service","announcement_bar_component_AnnouncementBarComponent","AnnouncementBarComponent","http","logger","this","prototype","ngOnInit","_this","get","pipe","Object","catchError","error","Error","map","announcements","findCurrentAnnouncement","subscribe","filter","Date","startDate","valueOf","now","endDate","ngComponentDef","type","selectors","factory","t","logger_service","consts","vars","template","directives","common","encapsulation","announcement_bar_module_AnnouncementBarModule","AnnouncementBarModule","customElementComponent","ngModuleDef","ngInjectorDef","imports","shared_module","__webpack_require__","d","__webpack_exports__","AnnouncementBarModuleNgFactory"],"mappings":"sMASIA,EAAM,CAAC,QAAS,qBAAsB,EAAG,QACzCC,EAAM,CAAC,EAAG,sBACVC,EAAM,CAAC,EAAG,oBACVC,EAAM,CAAC,MAAO,GAAI,EAAG,OACrBC,EAAM,CAAC,EAAG,aACVC,EAAM,CAAC,EAAG,SAAU,EAAG,QAC3B,SAASC,EAAwCC,EAAIC,GAUnD,GAVmE,EAALD,IC+B9DE,EAAA,WAAAR,GACEQ,EAAA,WAAAP,GACEO,EAAA,WAAAN,GACAM,EAAA,SAAAL,GACAK,EAAA,SAAAJ,GAAgDI,EAAA,mBAAUA,EAAA,KAC5DA,EAAA,KACFA,EAAA,MD3BS,EAALF,EAAQ,CACV,IAAIG,EAAUD,EAAA,KCsBPA,EAAA,MAAAA,EAAA,WAAAA,EAAA,GAAAC,EAAAC,aAAAC,UAAAH,EAAA,IACFA,EAAA,MAAAA,EAAA,iBAAAA,EAAA,GAAAC,EAAAC,aAAAE,SAAAJ,EAAA,IACeA,EAAA,MAAAA,EAAA,YAAAA,EAAA,GAAAC,EAAAC,aAAAG,SAAAL,EAAA,KA7CxB,IAAMM,EAAoBC,EAAA,EAAqB,qBAsC/CC,EAAA,WAcE,SAAAC,EAAoBC,EAA0BC,GAA1BC,KAAAF,OAA0BE,KAAAD,SDqC5C,OCnCFF,EAAAI,UAAAC,SAAA,eAAAC,EAAAH,KACEA,KAAKF,KAAKM,IAAoBV,GAC3BW,KACCC,OAAAC,EAAA,EAAAD,CAAW,SAAAE,GAET,OADAL,EAAKJ,OAAOS,MAAM,IAAIC,MAASf,EAAiB,oBAAoBc,EAAMhB,UACnE,KAETc,OAAAI,EAAA,EAAAJ,CAAI,SAAAK,GAAiB,OAAAR,EAAKS,wBAAwBD,KAClDL,OAAAC,EAAA,EAAAD,CAAW,SAAAE,GAET,OADAL,EAAKJ,OAAOS,MAAM,IAAIC,MAASf,EAAiB,2BAA2Bc,EAAMhB,UAC1E,MAGVqB,UAAU,SAAAvB,GAAgB,OAAAa,EAAKb,aAAeA,KAM3CO,EAAAI,UAAAW,wBAAR,SAAgCD,GAC9B,OAAOA,EACJG,OAAO,SAAAxB,GAAgB,WAAIyB,KAAKzB,EAAa0B,WAAWC,UAAYF,KAAKG,QACzEJ,OAAO,SAAAxB,GAAgB,WAAIyB,KAAKzB,EAAa6B,SAASF,UAAYF,KAAKG,QACvE,IDMHrB,EAAyBuB,eAAiBhC,EAAA,GAAoB,CAAEiC,KClCvDxB,EAAwByB,UAAA,2BAAAC,QAAA,SAAAC,GAAA,WAAAA,GAAxB3B,GAAwBT,EAAA,GAAAU,EAAA,GAAAV,EAAA,GAAAqC,EAAA,KAAAC,OAAA,EAAAC,KAAA,EAAAC,SAAA,SAAA1C,EAAAC,GAAA,EAAAD,GARnCE,EAAA,KAAAH,EAAA,UAAAN,GD4CiB,EAALO,IC5CZE,EAAA,MAAAA,EAAA,YAAAA,EAAA,GAAAD,EAAAG,iBD+CWuC,WAAY,CAACC,EAAA,GAAUC,cAAe,IACxClC,ECnDX,GCpCAmC,EAAA,oBAAAC,IAMEjC,KAAAkC,uBAAoCtC,ECDlC,OAFAqC,EAAsBE,YAAc/C,EAAA,GAAmB,CAAEiC,KDEhDY,ICDTA,EAAsBG,cAAgBhD,EAAA,GAAkB,CAAEmC,QAAS,SAAuCC,GAAK,OAAO,IAAKA,GDClHS,IAAqBI,QAAA,CAJvB,CAAEP,EAAA,EAAcQ,EAAA,EAAcxC,EAAA,MCI9BmC,EDLX,GEPAM,EAAAC,EAAAC,EAAA,mDAAAC,IAEO,IAAMA,EAAiC,IAAItD,EAAA,GAAoB4C","file":"announcement-bar-announcement-bar-module-ngfactory.f4d651a8c682e79c0a3b.js","sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { Logger } from 'app/shared/logger.service';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/shared/logger.service\";\nimport * as i3 from \"@angular/common\";\nvar _c0 = [\"class\", \"homepage-container\", 4, \"ngIf\"];\nvar _c1 = [1, \"homepage-container\"];\nvar _c2 = [1, \"announcement-bar\"];\nvar _c3 = [\"alt\", \"\", 3, \"src\"];\nvar _c4 = [3, \"innerHTML\"];\nvar _c5 = [1, \"button\", 3, \"href\"];\nfunction AnnouncementBarComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵelementStart(0, \"div\", _c1);\n    i0.ɵelementStart(1, \"div\", _c2);\n    i0.ɵelement(2, \"img\", _c3);\n    i0.ɵelement(3, \"p\", _c4);\n    i0.ɵelementStart(4, \"a\", _c5);\n    i0.ɵtext(5, \"Learn More\");\n    i0.ɵelementEnd();\n    i0.ɵelementEnd();\n    i0.ɵelementEnd();\n} if (rf & 2) {\n    var ctx_r72 = i0.ɵnextContext();\n    i0.ɵselect(2);\n    i0.ɵelementProperty(2, \"src\", i0.ɵbind(ctx_r72.announcement.imageUrl), i0.ɵsanitizeUrl);\n    i0.ɵselect(3);\n    i0.ɵelementProperty(3, \"innerHTML\", i0.ɵbind(ctx_r72.announcement.message), i0.ɵsanitizeHtml);\n    i0.ɵselect(4);\n    i0.ɵelementProperty(4, \"href\", i0.ɵbind(ctx_r72.announcement.linkUrl), i0.ɵsanitizeUrl);\n} }\nvar announcementsPath = CONTENT_URL_PREFIX + 'announcements.json';\n/**\n * Display the latest live announcement. This is used on the homepage.\n *\n * The data for the announcements is kept in `aio/content/marketing/announcements.json`.\n *\n * The format for that data file looks like:\n *\n * ```\n * [\n *   {\n *     \"startDate\": \"2018-02-01\",\n *     \"endDate\": \"2018-03-01\",\n *     \"message\": \"This is an <b>important</b> announcement\",\n *     \"imageUrl\": \"url/to/image\",\n *     \"linkUrl\": \"url/to/website\"\n *   },\n *   ...\n * ]\n * ```\n *\n * Only one announcement will be shown at any time. This is determined as the first \"live\"\n * announcement in the file, where \"live\" means that its start date is before today, and its\n * end date is after today.\n *\n * **Security Note:**\n * The `message` field can contain unsanitized HTML but this field should only updated by\n * verified members of the Angular team.\n */\nvar AnnouncementBarComponent = /** @class */ (function () {\n    function AnnouncementBarComponent(http, logger) {\n        this.http = http;\n        this.logger = logger;\n    }\n    AnnouncementBarComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.http.get(announcementsPath)\n            .pipe(catchError(function (error) {\n            _this.logger.error(new Error(announcementsPath + \" request failed: \" + error.message));\n            return [];\n        }), map(function (announcements) { return _this.findCurrentAnnouncement(announcements); }), catchError(function (error) {\n            _this.logger.error(new Error(announcementsPath + \" contains invalid data: \" + error.message));\n            return [];\n        }))\n            .subscribe(function (announcement) { return _this.announcement = announcement; });\n    };\n    /**\n     * Get the first date in the list that is \"live\" now\n     */\n    AnnouncementBarComponent.prototype.findCurrentAnnouncement = function (announcements) {\n        return announcements\n            .filter(function (announcement) { return new Date(announcement.startDate).valueOf() < Date.now(); })\n            .filter(function (announcement) { return new Date(announcement.endDate).valueOf() > Date.now(); })[0];\n    };\n    AnnouncementBarComponent.ngComponentDef = i0.ɵdefineComponent({ type: AnnouncementBarComponent, selectors: [[\"aio-announcement-bar\"]], factory: function AnnouncementBarComponent_Factory(t) { return new (t || AnnouncementBarComponent)(i0.ɵdirectiveInject(i1.HttpClient), i0.ɵdirectiveInject(i2.Logger)); }, consts: 1, vars: 1, template: function AnnouncementBarComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵtemplate(0, AnnouncementBarComponent_div_0_Template, 6, 3, \"div\", _c0);\n        } if (rf & 2) {\n            i0.ɵselect(0);\n            i0.ɵelementProperty(0, \"ngIf\", i0.ɵbind(ctx.announcement));\n        } }, directives: [i3.NgIf], encapsulation: 2 });\n    return AnnouncementBarComponent;\n}());\nexport { AnnouncementBarComponent };\n/*@__PURE__*/ i0.ɵsetClassMetadata(AnnouncementBarComponent, [{\n        type: Component,\n        args: [{\n                selector: 'aio-announcement-bar',\n                template: \"\\n  <div class=\\\"homepage-container\\\" *ngIf=\\\"announcement\\\">\\n    <div class=\\\"announcement-bar\\\">\\n      <img [src]=\\\"announcement.imageUrl\\\" alt=\\\"\\\">\\n      <p [innerHTML]=\\\"announcement.message\\\"></p>\\n      <a class=\\\"button\\\" [href]=\\\"announcement.linkUrl\\\">Learn More</a>\\n    </div>\\n  </div>\"\n            }]\n    }], function () { return [{ type: i1.HttpClient }, { type: i2.Logger }]; }, null);\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { Logger } from 'app/shared/logger.service';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nconst announcementsPath = CONTENT_URL_PREFIX + 'announcements.json';\n\nexport interface Announcement {\n  imageUrl: string;\n  message: string;\n  linkUrl: string;\n  startDate: string;\n  endDate: string;\n}\n\n/**\n * Display the latest live announcement. This is used on the homepage.\n *\n * The data for the announcements is kept in `aio/content/marketing/announcements.json`.\n *\n * The format for that data file looks like:\n *\n * ```\n * [\n *   {\n *     \"startDate\": \"2018-02-01\",\n *     \"endDate\": \"2018-03-01\",\n *     \"message\": \"This is an <b>important</b> announcement\",\n *     \"imageUrl\": \"url/to/image\",\n *     \"linkUrl\": \"url/to/website\"\n *   },\n *   ...\n * ]\n * ```\n *\n * Only one announcement will be shown at any time. This is determined as the first \"live\"\n * announcement in the file, where \"live\" means that its start date is before today, and its\n * end date is after today.\n *\n * **Security Note:**\n * The `message` field can contain unsanitized HTML but this field should only updated by\n * verified members of the Angular team.\n */\n@Component({\n  selector: 'aio-announcement-bar',\n  template: `\n  <div class=\"homepage-container\" *ngIf=\"announcement\">\n    <div class=\"announcement-bar\">\n      <img [src]=\"announcement.imageUrl\" alt=\"\">\n      <p [innerHTML]=\"announcement.message\"></p>\n      <a class=\"button\" [href]=\"announcement.linkUrl\">Learn More</a>\n    </div>\n  </div>`\n})\nexport class AnnouncementBarComponent implements OnInit {\n  announcement: Announcement;\n\n  constructor(private http: HttpClient, private logger: Logger) {}\n\n  ngOnInit() {\n    this.http.get<Announcement[]>(announcementsPath)\n      .pipe(\n        catchError(error => {\n          this.logger.error(new Error(`${announcementsPath} request failed: ${error.message}`));\n          return [];\n        }),\n        map(announcements => this.findCurrentAnnouncement(announcements)),\n        catchError(error => {\n          this.logger.error(new Error(`${announcementsPath} contains invalid data: ${error.message}`));\n          return [];\n        }),\n      )\n      .subscribe(announcement => this.announcement = announcement);\n  }\n\n  /**\n   * Get the first date in the list that is \"live\" now\n   */\n  private findCurrentAnnouncement(announcements: Announcement[]) {\n    return announcements\n      .filter(announcement => new Date(announcement.startDate).valueOf() < Date.now())\n      .filter(announcement => new Date(announcement.endDate).valueOf() > Date.now())\n      [0];\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AnnouncementBarComponent } from './announcement-bar.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, SharedModule, HttpClientModule ],\n  declarations: [ AnnouncementBarComponent ],\n  entryComponents: [ AnnouncementBarComponent ],\n})\nexport class AnnouncementBarModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = AnnouncementBarComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AnnouncementBarComponent } from './announcement-bar.component';\nimport * as i0 from \"@angular/core\";\nvar AnnouncementBarModule = /** @class */ (function () {\n    function AnnouncementBarModule() {\n        this.customElementComponent = AnnouncementBarComponent;\n    }\n    AnnouncementBarModule.ngModuleDef = i0.ɵdefineNgModule({ type: AnnouncementBarModule });\n    AnnouncementBarModule.ngInjectorDef = i0.defineInjector({ factory: function AnnouncementBarModule_Factory(t) { return new (t || AnnouncementBarModule)(); }, imports: [[CommonModule, SharedModule, HttpClientModule]] });\n    return AnnouncementBarModule;\n}());\nexport { AnnouncementBarModule };\n/*@__PURE__*/ i0.ɵsetNgModuleScope(AnnouncementBarModule, { declarations: [AnnouncementBarComponent], imports: [CommonModule, SharedModule, HttpClientModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(AnnouncementBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, SharedModule, HttpClientModule],\n                declarations: [AnnouncementBarComponent],\n                entryComponents: [AnnouncementBarComponent],\n            }]\n    }], null, null);\n","import * as i0 from '@angular/core';\nimport {AnnouncementBarModule} from './announcement-bar.module';\nexport const AnnouncementBarModuleNgFactory = new i0.ɵNgModuleFactory(AnnouncementBarModule);\nexport const ɵNonEmptyModule = true;"],"sourceRoot":""}