{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm5/observers.es5.js.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-tabs.component.ts","webpack:///./src/app/custom-elements/code/code-tabs.module.ts","webpack:///./node_modules/@angular/material/esm5/tabs.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","webpack:///./node_modules/@angular/material/esm5/card.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/card/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","webpack:///./src/app/custom-elements/code/code-tabs.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-tabs.component.ts.CodeTabsComponent.html","webpack:///./src/app/custom-elements/code/code-tabs.module.ngfactory.js.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","MutationObserverFactory","ContentObserver","CdkObserveContent","ObserversModule","_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","prototype","create","callback","MutationObserver","ngInjectableDef","Object","factory","token","providedIn","_mutationObserverFactory","this","_observedElements","Map","ngOnDestroy","_this","forEach","_","element","_cleanupObserver","observe","elementOrRef","nativeElement","observer","subscription","_observeElement","subscribe","unsubscribe","_unobserveElement","has","get","count","stream_1","mutations","next","characterData","childList","subtree","set","stream","_a","disconnect","complete","delete","_contentObserver","_elementRef","_ngZone","event","_disabled","_currentSubscription","defineProperty","value","_unsubscribe","_subscribe","enumerable","configurable","_debounce","ngAfterContentInit","disabled","runOutsideAngular","debounce","pipe","CodeTabsComponent","ngOnInit","tabs","codeExamples","content","querySelectorAll","i","length","push","getTabInfo","ngAfterViewInit","codeComponents","toArray","codeComponent","code","tabContent","class","getAttribute","innerHTML","language","linenums","path","region","header","code_tabs_module_CodeTabsModule","customElementComponent","_MAT_INK_BAR_POSITIONER","core","left","offsetLeft","width","offsetWidth","MatInkBar","_inkBarPositioner","alignToElement","show","requestAnimationFrame","_setStyles","style","visibility","hide","positions","inkBar","tabs_es5_MatTabLabel","_super","MatTabLabel","apply","arguments","tslib_es6","portal_es5","MatTabBase","tabs_es5_MatTab","MatTab","_viewContainerRef","call","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","ngOnChanges","changes","hasOwnProperty","_explicitContent","_implicitContent","core_es5","tabs_es5_MatTabBodyPortal","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","Subscription","EMPTY","_leavingSub","_beforeCentering","startWith","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","tabs_es5_MatTabBody","MatTabBody","_dir","changeDetectorRef","_dirChangeSubscription","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","e","toState","emit","clientHeight","_onTranslateTabComplete","fromState","_getLayoutDirection","MatTabLabelWrapperBase","tabs_es5_MatTabLabelWrapper","MatTabLabelWrapper","elementRef","focus","getOffsetLeft","getOffsetWidth","MatTabHeaderBase","tabs_es5_MatTabHeader","MatTabHeader","_changeDetectorRef","_viewportRuler","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_selectedIndex","selectFocusedIndex","indexFocused","coercion_es5","_keyManager","updateActiveItemIndex","ngAfterContentChecked","_tabLabelCount","_labelWrappers","_updatePagination","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","keycodes_es5","setFirstItemActive","preventDefault","setLastItemActive","focusIndex","onKeydown","dirChange","of","resize","realign","a11y_es5","withHorizontalOrientation","withWrap","updateActiveItem","merge","takeUntil","newFocusIndex","_setTabFocus","_onContentChanges","zoneCallback","run","_checkPaginationEnabled","_isValidIndex","setActiveItem","index","tab","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","transform","v","Math","max","min","_getMaxScrollDistance","_scrollHeader","scrollDir","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","viewLength","beforeVisiblePos","afterVisiblePos","isEnabled","selectedLabelWrapper","selectedIndex","_inkBar","nextId","MatTabChangeEvent","MatTabGroupBase","tabs_es5_MatTabGroup","MatTabGroup","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","isFirstRun_1","_createChangeEvent","Promise","resolve","then","_tabs","_subscribeToTabLabels","realignInkBar","_tabHeader","_focusChanged","map","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","idx","_getTabIndex","MatTabsModule","RenderType_MatTabGroup","encapsulation","styles","data","View_MatTabGroup_3","_l","View_MatTabGroup_2","portal","_ck","_v","parent","context","$implicit","templateLabel","View_MatTabGroup_4","View_MatTabGroup_1","en","$event","ad","component","platform_es5","fesm5_animations","common","ngIf","disableRipple","_co","ariaLabel","ariaLabelledby","unbounded","View_MatTabGroup_5","View_MatTabBody_0","RenderType_MatTabBody","bidi_es5","View_MatTabGroup_0","View_MatTabHeader_0","RenderType_MatTabHeader","scrolling_es5","ngForOf","animation","type","name","definitions","offset","options","undefined","minHeight","expr","timings","View_MatTabBody_1","_portalHost","observers_es5","RenderType_MatTab","View_MatTab_1","View_MatTab_0","MatCard","MatCardModule","RenderType_MatCard","View_MatCard_0","RenderType_CodeTabsComponent","View_CodeTabsComponent_2","View_CodeTabsComponent_1","code_component_ngfactory","code_component","snack_bar_es5","pretty_printer_service","copier_service","logger_service","View_CodeTabsComponent_0","dynamicHeight","View_CodeTabsComponent_Host_0","CodeTabsComponentNgFactory","CodeTabsModuleNgFactory","index_ngfactory","overlay_es5","platform_browser","button_es5","code_module"],"mappings":"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","file":"code-code-tabs-module-ngfactory.9968672e2be4920ee825.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, defineInjectable, inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nvar MutationObserverFactory = /** @class */ (function () {\n    function MutationObserverFactory() {\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    MutationObserverFactory.prototype.create = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    };\n    MutationObserverFactory.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ MutationObserverFactory.ngInjectableDef = defineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n    return MutationObserverFactory;\n}());\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nvar ContentObserver = /** @class */ (function () {\n    function ContentObserver(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ContentObserver.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._observedElements.forEach(function (_, element) { return _this._cleanupObserver(element); });\n    };\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    ContentObserver.prototype.observe = /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    function (elementOrRef) {\n        var _this = this;\n        /** @type {?} */\n        var element = elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n        return Observable.create(function (observer) {\n            /** @type {?} */\n            var stream = _this._observeElement(element);\n            /** @type {?} */\n            var subscription = stream.subscribe(observer);\n            return function () {\n                subscription.unsubscribe();\n                _this._unobserveElement(element);\n            };\n        });\n    };\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._observeElement = /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            var stream_1 = new Subject();\n            /** @type {?} */\n            var observer = this._mutationObserverFactory.create(function (mutations) { return stream_1.next(mutations); });\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer: observer, stream: stream_1, count: 1 });\n        }\n        else {\n            /** @type {?} */ ((this._observedElements.get(element))).count++;\n        }\n        return /** @type {?} */ ((this._observedElements.get(element))).stream;\n    };\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._unobserveElement = /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            /** @type {?} */ ((this._observedElements.get(element))).count--;\n            if (!/** @type {?} */ ((this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    };\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._cleanupObserver = /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            var _a = /** @type {?} */ ((this._observedElements.get(element))), observer = _a.observer, stream = _a.stream;\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    };\n    ContentObserver.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ContentObserver.ctorParameters = function () { return [\n        { type: MutationObserverFactory }\n    ]; };\n    /** @nocollapse */ ContentObserver.ngInjectableDef = defineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(inject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n    return ContentObserver;\n}());\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nvar CdkObserveContent = /** @class */ (function () {\n    function CdkObserveContent(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    Object.defineProperty(CdkObserveContent.prototype, \"disabled\", {\n        /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         */\n        get: /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._disabled ? this._unsubscribe() : this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkObserveContent.prototype, \"debounce\", {\n        /** Debounce interval for emitting the changes. */\n        get: /**\n         * Debounce interval for emitting the changes.\n         * @return {?}\n         */\n        function () { return this._debounce; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._debounce = coerceNumberProperty(value);\n            this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._unsubscribe();\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype._subscribe = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._unsubscribe();\n        /** @type {?} */\n        var stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(function () {\n            _this._currentSubscription =\n                (_this.debounce ? stream.pipe(debounceTime(_this.debounce)) : stream).subscribe(_this.event);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype._unsubscribe = /**\n     * @return {?}\n     */\n    function () {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    };\n    CdkObserveContent.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkObserveContent.ctorParameters = function () { return [\n        { type: ContentObserver },\n        { type: ElementRef },\n        { type: NgZone }\n    ]; };\n    CdkObserveContent.propDecorators = {\n        event: [{ type: Output, args: ['cdkObserveContent',] }],\n        disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n        debounce: [{ type: Input }]\n    };\n    return CdkObserveContent;\n}());\nvar ObserversModule = /** @class */ (function () {\n    function ObserversModule() {\n    }\n    ObserversModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory]\n                },] },\n    ];\n    return ObserversModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n//# sourceMappingURL=observers.es5.js.map\n","/* tslint:disable component-selector */\nimport { Component, AfterViewInit, ViewChild, Input, ViewChildren, QueryList, OnInit } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\nexport interface TabInfo {\n  class: string|null;\n  code: string;\n  language: string|null;\n  linenums: any;\n  path: string;\n  region: string;\n  header: string|null;\n}\n\n/**\n * Renders a set of tab group of code snippets.\n *\n * The innerHTML of the `<code-tabs>` component should contain `<code-pane>` elements.\n * Each `<code-pane>` has the same interface as the embedded `<code-example>` component.\n * The optional `linenums` attribute is the default `linenums` for each code pane.\n */\n@Component({\n  selector: 'code-tabs',\n  template: `\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  `,\n})\nexport class CodeTabsComponent implements OnInit, AfterViewInit {\n  tabs: TabInfo[];\n\n  @Input() linenums: string;\n\n  @ViewChild('content') content;\n\n  @ViewChildren(CodeComponent) codeComponents: QueryList<CodeComponent>;\n\n  ngOnInit() {\n    this.tabs = [];\n    const codeExamples = this.content.nativeElement.querySelectorAll('code-pane');\n\n    for (let i = 0; i < codeExamples.length; i++) {\n      const tabContent = codeExamples[i];\n      this.tabs.push(this.getTabInfo(tabContent));\n    }\n  }\n\n  ngAfterViewInit() {\n    this.codeComponents.toArray().forEach((codeComponent, i) => {\n      codeComponent.code = this.tabs[i].code;\n    });\n  }\n\n  /** Gets the extracted TabInfo data from the provided code-pane element. */\n  private getTabInfo(tabContent: HTMLElement): TabInfo {\n    return {\n      class: tabContent.getAttribute('class'),\n      code: tabContent.innerHTML,\n      language: tabContent.getAttribute('language'),\n      linenums: tabContent.getAttribute('linenums') || this.linenums,\n      path: tabContent.getAttribute('path') || '',\n      region: tabContent.getAttribute('region') || '',\n      header: tabContent.getAttribute('header')\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeTabsComponent } from './code-tabs.component';\nimport { MatCardModule, MatTabsModule } from '@angular/material';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatCardModule, MatTabsModule, CodeModule ],\n  declarations: [ CodeTabsComponent ],\n  exports: [ CodeTabsComponent ],\n  entryComponents: [ CodeTabsComponent ]\n})\nexport class CodeTabsModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeTabsComponent;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewContainerRef, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, Optional, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { __extends } from 'tslib';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinDisableRipple, mixinColor, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Platform } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token for the MatInkBar's Positioner.\n  @type {?} */\nvar _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    var method = function (element) { return ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }); };\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nvar MatInkBar = /** @class */ (function () {\n    function MatInkBar(_elementRef, _ngZone, _inkBarPositioner) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype.alignToElement = /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () { return _this._setStyles(element); });\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    };\n    /** Shows the ink bar. */\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.show = /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    };\n    /** Hides the ink bar. */\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.hide = /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    };\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype._setStyles = /**\n     * Sets the proper styles to the ink bar element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        var inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    };\n    MatInkBar.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatInkBar.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] }\n    ]; };\n    return MatInkBar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nvar MatTabContent = /** @class */ (function () {\n    function MatTabContent(template) {\n        this.template = template;\n    }\n    MatTabContent.decorators = [\n        { type: Directive, args: [{ selector: '[matTabContent]' },] },\n    ];\n    /** @nocollapse */\n    MatTabContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return MatTabContent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar _CdkPortal = CdkPortal;\n/**\n * Used to flag tab labels for use with the portal directive\n */\nvar MatTabLabel = /** @class */ (function (_super) {\n    __extends(MatTabLabel, _super);\n    function MatTabLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatTabLabel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                },] },\n    ];\n    return MatTabLabel;\n}(_CdkPortal));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabBase = /** @class */ (function () {\n    function MatTabBase() {\n    }\n    return MatTabBase;\n}());\n/** @type {?} */\nvar _MatTabMixinBase = mixinDisabled(MatTabBase);\nvar MatTab = /** @class */ (function (_super) {\n    __extends(MatTab, _super);\n    function MatTab(_viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        _this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        _this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        _this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        _this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        _this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        _this.isActive = false;\n        return _this;\n    }\n    Object.defineProperty(MatTab.prototype, \"content\", {\n        /** @docs-private */\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this._contentPortal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatTab.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._stateChanges.complete();\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    };\n    MatTab.decorators = [\n        { type: Component, args: [{selector: 'mat-tab',\n                    template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                    inputs: ['disabled'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matTab',\n                },] },\n    ];\n    /** @nocollapse */\n    MatTab.ctorParameters = function () { return [\n        { type: ViewContainerRef }\n    ]; };\n    MatTab.propDecorators = {\n        templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n        _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef },] }],\n        _implicitContent: [{ type: ViewChild, args: [TemplateRef,] }],\n        textLabel: [{ type: Input, args: ['label',] }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n    };\n    return MatTab;\n}(_MatTabMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Animations used by the Material tabs.\n * \\@docs-private\n  @type {?} */\nvar matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nvar MatTabBodyPortal = /** @class */ (function (_super) {\n    __extends(MatTabBodyPortal, _super);\n    function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host) {\n        var _this = _super.call(this, componentFactoryResolver, viewContainerRef) || this;\n        _this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        _this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        _this._leavingSub = Subscription.EMPTY;\n        return _this;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnInit = /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe(function (isCentering) {\n            if (isCentering && !_this.hasAttached()) {\n                _this.attach(_this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(function () {\n            _this.detach();\n        });\n    };\n    /** Clean up centering subscription. */\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnDestroy = /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    };\n    MatTabBodyPortal.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabBodyHost]'\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabBodyPortal.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(function () { return MatTabBody; }),] }] }\n    ]; };\n    return MatTabBodyPortal;\n}(CdkPortalOutlet));\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nvar MatTabBody = /** @class */ (function () {\n    function MatTabBody(_elementRef, _dir, /**\n                   * @breaking-change 8.0.0 changeDetectorRef to be made required.\n                   */\n    changeDetectorRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        if (this._dir && changeDetectorRef) {\n            this._dirChangeSubscription = this._dir.change.subscribe(function (dir) {\n                _this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    Object.defineProperty(MatTabBody.prototype, \"position\", {\n        /** The shifted index position of the tab body, where zero represents the active center tab. */\n        set: /**\n         * The shifted index position of the tab body, where zero represents the active center tab.\n         * @param {?} position\n         * @return {?}\n         */\n        function (position) {\n            this._positionIndex = position;\n            this._computePositionAnimationState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    MatTabBody.prototype.ngOnInit = /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    function () {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabBody.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._dirChangeSubscription.unsubscribe();\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MatTabBody.prototype._onTranslateTabStarted = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        /** @type {?} */\n        var isCentering = this._isCenterPosition(e.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MatTabBody.prototype._onTranslateTabComplete = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        // If the transition to the center is complete, emit an event.\n        if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n            this._onCentered.emit();\n        }\n        if (this._isCenterPosition(e.fromState) && !this._isCenterPosition(this._position)) {\n            this._afterLeavingCenter.emit();\n        }\n    };\n    /** The text direction of the containing app. */\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    MatTabBody.prototype._getLayoutDirection = /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Whether the provided position state is considered center, regardless of origin. */\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    MatTabBody.prototype._isCenterPosition = /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @param {?=} dir\n     * @return {?}\n     */\n    MatTabBody.prototype._computePositionAnimationState = /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @param {?=} dir\n     * @return {?}\n     */\n    function (dir) {\n        if (dir === void 0) { dir = this._getLayoutDirection(); }\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    };\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @return {?}\n     */\n    MatTabBody.prototype._computePositionFromOrigin = /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    };\n    MatTabBody.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-body',\n                    template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"_position\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_onTranslateTabComplete($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                    styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [matTabsAnimations.translateTab],\n                    host: {\n                        'class': 'mat-tab-body',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabBody.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    MatTabBody.propDecorators = {\n        _onCentering: [{ type: Output }],\n        _beforeCentering: [{ type: Output }],\n        _afterLeavingCenter: [{ type: Output }],\n        _onCentered: [{ type: Output }],\n        _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }],\n        _content: [{ type: Input, args: ['content',] }],\n        origin: [{ type: Input }],\n        position: [{ type: Input }]\n    };\n    return MatTabBody;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabLabelWrapperBase = /** @class */ (function () {\n    function MatTabLabelWrapperBase() {\n    }\n    return MatTabLabelWrapperBase;\n}());\n/** @type {?} */\nvar _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nvar MatTabLabelWrapper = /** @class */ (function (_super) {\n    __extends(MatTabLabelWrapper, _super);\n    function MatTabLabelWrapper(elementRef) {\n        var _this = _super.call(this) || this;\n        _this.elementRef = elementRef;\n        return _this;\n    }\n    /** Sets focus on the wrapper element */\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.focus = /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    function () {\n        this.elementRef.nativeElement.focus();\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetLeft = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetWidth = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    MatTabLabelWrapper.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabLabelWrapper.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    return MatTabLabelWrapper;\n}(_MatTabLabelWrapperMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n  @type {?} */\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabHeaderBase = /** @class */ (function () {\n    function MatTabHeaderBase() {\n    }\n    return MatTabHeaderBase;\n}());\n/** @type {?} */\nvar _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nvar MatTabHeader = /** @class */ (function (_super) {\n    __extends(MatTabHeader, _super);\n    function MatTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._viewportRuler = _viewportRuler;\n        _this._dir = _dir;\n        _this._ngZone = _ngZone;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        _this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        _this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        _this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        _this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        _this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        _this._disableScrollBefore = true;\n        _this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        _this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        _this.indexFocused = new EventEmitter();\n        return _this;\n    }\n    Object.defineProperty(MatTabHeader.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: /**\n         * The index of the active tab.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            value = coerceNumberProperty(value);\n            this._selectedIndexChanged = this._selectedIndex != value;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItemIndex(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._labelWrappers.length) {\n            this._updatePagination();\n            this._tabLabelCount = this._labelWrappers.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatTabHeader.prototype._handleKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     */\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngAfterContentInit = /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        var resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        var realign = function () {\n            _this._updatePagination();\n            _this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._labelWrappers)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe(function () {\n            realign();\n            _this._keyManager.withHorizontalOrientation(_this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(function (newFocusIndex) {\n            _this.indexFocused.emit(newFocusIndex);\n            _this._setTabFocus(newFocusIndex);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    MatTabHeader.prototype._onContentChanges = /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var zoneCallback = function () {\n            _this._updatePagination();\n            _this._alignInkBarToSelectedTab();\n            _this._changeDetectorRef.markForCheck();\n        };\n        // The content observer runs outside the `NgZone` by default, which\n        // means that we need to bring the callback back in ourselves.\n        // @breaking-change 8.0.0 Remove null check for `_ngZone` once it's a required parameter.\n        this._ngZone ? this._ngZone.run(zoneCallback) : zoneCallback();\n    };\n    /**\n     * Updating the view whether pagination should be enabled or not\n     */\n    /**\n     * Updating the view whether pagination should be enabled or not\n     * @return {?}\n     */\n    MatTabHeader.prototype._updatePagination = /**\n     * Updating the view whether pagination should be enabled or not\n     * @return {?}\n     */\n    function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MatTabHeader.prototype, \"focusIndex\", {\n        /** Tracks which element has focus; used for keyboard navigation */\n        get: /**\n         * Tracks which element has focus; used for keyboard navigation\n         * @return {?}\n         */\n        function () {\n            return this._keyManager ? /** @type {?} */ ((this._keyManager.activeItemIndex)) : 0;\n        },\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set: /**\n         * When the focus index is set, we must manually send focus to the correct label\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n                return;\n            }\n            this._keyManager.setActiveItem(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabHeader.prototype._isValidIndex = /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (!this._labelWrappers) {\n            return true;\n        }\n        /** @type {?} */\n        var tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    MatTabHeader.prototype._setTabFocus = /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._labelWrappers && this._labelWrappers.length) {\n            this._labelWrappers.toArray()[tabIndex].focus();\n            /** @type {?} */\n            var containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            var dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /** The layout direction of the containing app. */\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    MatTabHeader.prototype._getLayoutDirection = /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    MatTabHeader.prototype._updateTabScrollPosition = /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/material2/issues/10276\n        this._tabList.nativeElement.style.transform = \"translateX(\" + translateX + \"px)\";\n    };\n    Object.defineProperty(MatTabHeader.prototype, \"scrollDistance\", {\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        get: /**\n         * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n         * @return {?}\n         */\n        function () { return this._scrollDistance; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n            // Mark that the scroll distance has changed so that after the view is checked, the CSS\n            // transformation can move the header.\n            this._scrollDistanceChanged = true;\n            this._checkScrollingControls();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} scrollDir\n     * @return {?}\n     */\n    MatTabHeader.prototype._scrollHeader = /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} scrollDir\n     * @return {?}\n     */\n    function (scrollDir) {\n        /** @type {?} */\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    MatTabHeader.prototype._scrollToLabel = /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    function (labelIndex) {\n        /** @type {?} */\n        var selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        /** @type {?} */\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        /** @type {?} */\n        var labelBeforePos;\n        /** @type {?} */\n        var labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n        /** @type {?} */\n        var beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        var afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._checkPaginationEnabled = /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._checkScrollingControls = /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._getMaxScrollDistance = /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    };\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    MatTabHeader.prototype._alignInkBarToSelectedTab = /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n            this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n            null;\n        this._inkBar.alignToElement(/** @type {?} */ ((selectedLabelWrapper)));\n    };\n    MatTabHeader.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-header',\n                    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_scrollHeader('before')\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (click)=\\\"_scrollHeader('after')\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"],\n                    inputs: ['disableRipple'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabHeader.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone }\n    ]; };\n    MatTabHeader.propDecorators = {\n        _labelWrappers: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n        _inkBar: [{ type: ViewChild, args: [MatInkBar,] }],\n        _tabListContainer: [{ type: ViewChild, args: ['tabListContainer',] }],\n        _tabList: [{ type: ViewChild, args: ['tabList',] }],\n        selectedIndex: [{ type: Input }],\n        selectFocusedIndex: [{ type: Output }],\n        indexFocused: [{ type: Output }]\n    };\n    return MatTabHeader;\n}(_MatTabHeaderMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Used to generate unique ID's for each tab component\n  @type {?} */\nvar nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nvar  /**\n * A simple change event emitted on focus or selection changes.\n */\nMatTabChangeEvent = /** @class */ (function () {\n    function MatTabChangeEvent() {\n    }\n    return MatTabChangeEvent;\n}());\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabGroupBase = /** @class */ (function () {\n    function MatTabGroupBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabGroupBase;\n}());\n/** @type {?} */\nvar _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nvar MatTabGroup = /** @class */ (function (_super) {\n    __extends(MatTabGroup, _super);\n    function MatTabGroup(elementRef, _changeDetectorRef) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        _this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        _this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        _this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        _this._tabLabelSubscription = Subscription.EMPTY;\n        _this._dynamicHeight = false;\n        _this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        _this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        _this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        _this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        _this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        _this.selectedTabChange = new EventEmitter(true);\n        _this._groupId = nextId++;\n        return _this;\n    }\n    Object.defineProperty(MatTabGroup.prototype, \"dynamicHeight\", {\n        /** Whether the tab group should grow to the size of the active tab. */\n        get: /**\n         * Whether the tab group should grow to the size of the active tab.\n         * @return {?}\n         */\n        function () { return this._dynamicHeight; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"selectedIndex\", {\n        /** The index of the active tab. */\n        get: /**\n         * The index of the active tab.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._indexToSelect = coerceNumberProperty(value, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"backgroundColor\", {\n        /** Background color of the tab group. */\n        get: /**\n         * Background color of the tab group.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentChecked = /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            var isFirstRun_1 = this._selectedIndex == null;\n            if (!isFirstRun_1) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(function () {\n                _this._tabs.forEach(function (tab, index) { return tab.isActive = index === indexToSelect; });\n                if (!isFirstRun_1) {\n                    _this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach(function (tab, index) {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - _this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(function () {\n            /** @type {?} */\n            var indexToSelect = _this._clampTabIndex(_this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === _this._selectedIndex) {\n                /** @type {?} */\n                var tabs = _this._tabs.toArray();\n                for (var i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        _this._indexToSelect = _this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            _this._subscribeToTabLabels();\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    };\n    /** Re-aligns the ink bar to the selected tab element. */\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    MatTabGroup.prototype.realignInkBar = /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    function () {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._focusChanged = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._createChangeEvent = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @return {?}\n     */\n    MatTabGroup.prototype._subscribeToTabLabels = /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge.apply(void 0, this._tabs.map(function (tab) { return tab._stateChanges; })).subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n    };\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._clampTabIndex = /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    };\n    /** Returns a unique id for each tab label element */\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabLabelId = /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns a unique id for each tab content element */\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabContentId = /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    MatTabGroup.prototype._setTabBodyWrapperHeight = /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    };\n    /** Removes the height of the tab body wrapper. */\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    MatTabGroup.prototype._removeTabBodyWrapperHeight = /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    function () {\n        this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n        this._tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    };\n    /** Handle click events, setting new selected index if appropriate. */\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} idx\n     * @return {?}\n     */\n    MatTabGroup.prototype._handleClick = /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} idx\n     * @return {?}\n     */\n    function (tab, tabHeader, idx) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = idx;\n        }\n    };\n    /** Retrieves the tabindex for the tab. */\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabIndex = /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    function (tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    };\n    MatTabGroup.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-group',\n                    exportAs: 'matTabGroup',\n                    template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                    styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    inputs: ['color', 'disableRipple'],\n                    host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabGroup.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef }\n    ]; };\n    MatTabGroup.propDecorators = {\n        _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n        _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n        _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }],\n        dynamicHeight: [{ type: Input }],\n        selectedIndex: [{ type: Input }],\n        headerPosition: [{ type: Input }],\n        backgroundColor: [{ type: Input }],\n        selectedIndexChange: [{ type: Output }],\n        focusChange: [{ type: Output }],\n        animationDone: [{ type: Output }],\n        selectedTabChange: [{ type: Output }]\n    };\n    return MatTabGroup;\n}(_MatTabGroupMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabNavBase = /** @class */ (function () {\n    function MatTabNavBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabNavBase;\n}());\n/** @type {?} */\nvar _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MatTabNav = /** @class */ (function (_super) {\n    __extends(MatTabNav, _super);\n    function MatTabNav(elementRef, _dir, _ngZone, _changeDetectorRef, _viewportRuler) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._dir = _dir;\n        _this._ngZone = _ngZone;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._viewportRuler = _viewportRuler;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        _this._onDestroy = new Subject();\n        return _this;\n    }\n    Object.defineProperty(MatTabNav.prototype, \"backgroundColor\", {\n        /** Background color of the tab nav. */\n        get: /**\n         * Background color of the tab nav.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?} element\n     * @return {?}\n     */\n    MatTabNav.prototype.updateActiveLink = /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n        // @breaking-change 8.0.0\n        this._activeLinkChanged = !!element;\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * @return {?}\n     */\n    MatTabNav.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            /** @type {?} */\n            var dirChange = _this._dir ? _this._dir.change : of(null);\n            return merge(dirChange, _this._viewportRuler.change(10))\n                .pipe(takeUntil(_this._onDestroy))\n                .subscribe(function () { return _this._alignInkBar(); });\n        });\n    };\n    /** Checks if the active link has been changed and, if so, will update the ink bar. */\n    /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    MatTabNav.prototype.ngAfterContentChecked = /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    function () {\n        if (this._activeLinkChanged) {\n            /** @type {?} */\n            var activeTab = this._tabLinks.find(function (tab) { return tab.active; });\n            this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n            this._alignInkBar();\n            this._activeLinkChanged = false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabNav.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    };\n    /** Aligns the ink bar to the active link. */\n    /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    MatTabNav.prototype._alignInkBar = /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    function () {\n        if (this._activeLinkElement) {\n            this._inkBar.show();\n            this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    };\n    MatTabNav.decorators = [\n        { type: Component, args: [{selector: '[mat-tab-nav-bar]',\n                    exportAs: 'matTabNavBar, matTabNav',\n                    inputs: ['color', 'disableRipple'],\n                    template: \"<div class=\\\"mat-tab-links\\\" (cdkObserveContent)=\\\"_alignInkBar()\\\"><ng-content></ng-content><mat-ink-bar></mat-ink-bar></div>\",\n                    styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"],\n                    host: { 'class': 'mat-tab-nav-bar' },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabNav.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ViewportRuler }\n    ]; };\n    MatTabNav.propDecorators = {\n        _inkBar: [{ type: ViewChild, args: [MatInkBar,] }],\n        _tabLinks: [{ type: ContentChildren, args: [forwardRef(function () { return MatTabLink; }), { descendants: true },] }],\n        backgroundColor: [{ type: Input }]\n    };\n    return MatTabNav;\n}(_MatTabNavMixinBase));\nvar MatTabLinkBase = /** @class */ (function () {\n    function MatTabLinkBase() {\n    }\n    return MatTabLinkBase;\n}());\n/** @type {?} */\nvar _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nvar MatTabLink = /** @class */ (function (_super) {\n    __extends(MatTabLink, _super);\n    function MatTabLink(_tabNavBar, _elementRef, ngZone, platform, globalOptions, tabIndex, _focusMonitor) {\n        var _this = _super.call(this) || this;\n        _this._tabNavBar = _tabNavBar;\n        _this._elementRef = _elementRef;\n        _this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        _this._isActive = false;\n        /**\n         * Whether the ripples are globally disabled through the RippleGlobalOptions\n         */\n        _this._ripplesGloballyDisabled = false;\n        /**\n         * Ripple configuration for ripples that are launched on pointer down.\n         * \\@docs-private\n         */\n        _this.rippleConfig = {};\n        _this._tabLinkRipple = new RippleRenderer(_this, ngZone, _elementRef, platform);\n        _this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        if (globalOptions) {\n            // TODO(paul): Do not copy each option manually. Allow dynamic global option changes: #9729\n            _this._ripplesGloballyDisabled = !!globalOptions.disabled;\n            _this.rippleConfig = {\n                terminateOnPointerUp: globalOptions.terminateOnPointerUp,\n                animation: globalOptions.animation,\n            };\n        }\n        if (_focusMonitor) {\n            _focusMonitor.monitor(_elementRef);\n        }\n        return _this;\n    }\n    Object.defineProperty(MatTabLink.prototype, \"active\", {\n        /** Whether the link is active. */\n        get: /**\n         * Whether the link is active.\n         * @return {?}\n         */\n        function () { return this._isActive; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this._isActive) {\n                this._isActive = value;\n                this._tabNavBar.updateActiveLink(this._elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabLink.prototype, \"rippleDisabled\", {\n        /**\n         * Whether ripples are disabled on interaction\n         * @docs-private\n         */\n        get: /**\n         * Whether ripples are disabled on interaction\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n                this._ripplesGloballyDisabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatTabLink.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabLinkRipple._removeTriggerEvents();\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n    };\n    MatTabLink.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link',\n                        '[attr.aria-current]': 'active',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.tabIndex]': 'tabIndex',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabLink.ctorParameters = function () { return [\n        { type: MatTabNav },\n        { type: ElementRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: FocusMonitor }\n    ]; };\n    MatTabLink.propDecorators = {\n        active: [{ type: Input }]\n    };\n    return MatTabLink;\n}(_MatTabLinkMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MatTabsModule = /** @class */ (function () {\n    function MatTabsModule() {\n    }\n    MatTabsModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                },] },\n    ];\n    return MatTabsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabContent, MatTabsModule, MatTabChangeEvent, MatTabGroupBase, _MatTabGroupMixinBase, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa23, MatTabBase as ɵf23, _MatTabMixinBase as ɵg23, MatTabHeaderBase as ɵb23, _MatTabHeaderMixinBase as ɵc23, MatTabLabelWrapperBase as ɵd23, _MatTabLabelWrapperMixinBase as ɵe23, MatTabLinkBase as ɵj23, MatTabNavBase as ɵh23, _MatTabLinkMixinBase as ɵk23, _MatTabNavMixinBase as ɵi23 };\n//# sourceMappingURL=tabs.es5.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tabs\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/observers\";\nimport * as i4 from \"@angular/cdk/bidi\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/cdk/portal\";\nimport * as i8 from \"@angular/cdk/platform\";\nimport * as i9 from \"@angular/cdk/a11y\";\nimport * as i10 from \"@angular/platform-browser/animations\";\nimport * as i11 from \"@angular/cdk/scrolling\";\nvar MatTabsModuleNgFactory = i0.ɵcmf(i1.MatTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i4.BidiModule, i4.BidiModule, []), i0.ɵmpd(1073742336, i5.MatCommonModule, i5.MatCommonModule, [[2, i5.MATERIAL_SANITY_CHECKS], [2, i6.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i7.PortalModule, i7.PortalModule, []), i0.ɵmpd(1073742336, i8.PlatformModule, i8.PlatformModule, []), i0.ɵmpd(1073742336, i5.MatRippleModule, i5.MatRippleModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i9.A11yModule, i9.A11yModule, []), i0.ɵmpd(1073742336, i1.MatTabsModule, i1.MatTabsModule, [])]); });\nexport { MatTabsModuleNgFactory as MatTabsModuleNgFactory };\nvar styles_MatTabGroup = [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"];\nvar RenderType_MatTabGroup = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabGroup, data: {} });\nexport { RenderType_MatTabGroup as RenderType_MatTabGroup };\nfunction View_MatTabGroup_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_MatTabGroup_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_3)), i0.ɵdid(1, 212992, null, 0, i7.CdkPortalOutlet, [i0.ComponentFactoryResolver, i0.ViewContainerRef], { portal: [0, \"portal\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.templateLabel; _ck(_v, 1, 0, currVal_0); }, null); }\nfunction View_MatTabGroup_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(0, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.textLabel; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_MatTabGroup_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"div\", [[\"cdkMonitorElementFocus\", \"\"], [\"class\", \"mat-tab-label mat-ripple\"], [\"mat-ripple\", \"\"], [\"matTabLabelWrapper\", \"\"], [\"role\", \"tab\"]], [[8, \"id\", 0], [1, \"tabIndex\", 0], [1, \"aria-posinset\", 0], [1, \"aria-setsize\", 0], [1, \"aria-controls\", 0], [1, \"aria-selected\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-label-active\", null], [2, \"mat-ripple-unbounded\", null], [2, \"mat-tab-disabled\", null], [1, \"aria-disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._handleClick(_v.context.$implicit, i0.ɵnov(_v.parent, 3), _v.context.index) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), i0.ɵdid(2, 147456, null, 0, i9.CdkMonitorFocus, [i0.ElementRef, i9.FocusMonitor], null, null), i0.ɵdid(3, 16384, [[3, 4]], 0, i1.MatTabLabelWrapper, [i0.ElementRef], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-label-content\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_2)), i0.ɵdid(6, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_4)), i0.ɵdid(8, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_12 = (_v.context.$implicit.disabled || _co.disableRipple); _ck(_v, 1, 0, currVal_12); var currVal_13 = _v.context.$implicit.disabled; _ck(_v, 3, 0, currVal_13); var currVal_14 = _v.context.$implicit.templateLabel; _ck(_v, 6, 0, currVal_14); var currVal_15 = !_v.context.$implicit.templateLabel; _ck(_v, 8, 0, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabLabelId(_v.context.index); var currVal_1 = _co._getTabIndex(_v.context.$implicit, _v.context.index); var currVal_2 = (_v.context.index + 1); var currVal_3 = _co._tabs.length; var currVal_4 = _co._getTabContentId(_v.context.index); var currVal_5 = (_co.selectedIndex == _v.context.index); var currVal_6 = (_v.context.$implicit.ariaLabel || null); var currVal_7 = ((!_v.context.$implicit.ariaLabel && _v.context.$implicit.ariaLabelledby) ? _v.context.$implicit.ariaLabelledby : null); var currVal_8 = (_co.selectedIndex == _v.context.index); var currVal_9 = i0.ɵnov(_v, 1).unbounded; var currVal_10 = i0.ɵnov(_v, 3).disabled; var currVal_11 = !!i0.ɵnov(_v, 3).disabled; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); }); }\nfunction View_MatTabGroup_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"], [\"role\", \"tabpanel\"]], [[8, \"id\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-body-active\", null]], [[null, \"_onCentered\"], [null, \"_onCentering\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"_onCentered\" === en)) {\n        var pd_0 = (_co._removeTabBodyWrapperHeight() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"_onCentering\" === en)) {\n        var pd_1 = (_co._setTabBodyWrapperHeight($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], { _content: [0, \"_content\"], origin: [1, \"origin\"], position: [2, \"position\"] }, { _onCentering: \"_onCentering\", _onCentered: \"_onCentered\" })], function (_ck, _v) { var currVal_3 = _v.context.$implicit.content; var currVal_4 = _v.context.$implicit.origin; var currVal_5 = _v.context.$implicit.position; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabContentId(_v.context.index); var currVal_1 = _co._getTabLabelId(_v.context.index); var currVal_2 = (_co.selectedIndex == _v.context.index); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_MatTabGroup_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _tabBodyWrapper: 0 }), i0.ɵqud(402653184, 2, { _tabHeader: 0 }), (_l()(), i0.ɵeld(2, 0, null, null, 4, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], [[null, \"indexFocused\"], [null, \"selectFocusedIndex\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"indexFocused\" === en)) {\n        var pd_0 = (_co._focusChanged($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"selectFocusedIndex\" === en)) {\n        var pd_1 = ((_co.selectedIndex = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(3, 3325952, [[2, 4], [\"tabHeader\", 4]], 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i11.ViewportRuler, [2, i4.Directionality], i0.NgZone], { disableRipple: [0, \"disableRipple\"], selectedIndex: [1, \"selectedIndex\"] }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }), i0.ɵqud(603979776, 3, { _labelWrappers: 1 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_MatTabGroup_1)), i0.ɵdid(6, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵeld(7, 0, [[1, 0], [\"tabBodyWrapper\", 1]], null, 2, \"div\", [[\"class\", \"mat-tab-body-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_5)), i0.ɵdid(9, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.disableRipple; var currVal_3 = _co.selectedIndex; _ck(_v, 3, 0, currVal_2, currVal_3); var currVal_4 = _co._tabs; _ck(_v, 6, 0, currVal_4); var currVal_5 = _co._tabs; _ck(_v, 9, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 3)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 3)._getLayoutDirection() == \"rtl\"); _ck(_v, 2, 0, currVal_0, currVal_1); }); }\nexport function View_MatTabGroup_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-group\", [[\"class\", \"mat-tab-group\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, View_MatTabGroup_0, RenderType_MatTabGroup)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef], null, null), i0.ɵqud(603979776, 1, { _tabs: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 1).headerPosition === \"below\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabGroupNgFactory = i0.ɵccf(\"mat-tab-group\", i1.MatTabGroup, View_MatTabGroup_Host_0, { color: \"color\", disableRipple: \"disableRipple\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", backgroundColor: \"backgroundColor\" }, { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, []);\nexport { MatTabGroupNgFactory as MatTabGroupNgFactory };\nvar styles_MatTabBody = [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"];\nvar RenderType_MatTabBody = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabBody, data: { \"animation\": [{ type: 7, name: \"translateTab\", definitions: [{ type: 0, name: \"center, void, left-origin-center, right-origin-center\", styles: { type: 6, styles: { transform: \"none\" }, offset: null }, options: undefined }, { type: 0, name: \"left\", styles: { type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 0, name: \"right\", styles: { type: 6, styles: { transform: \"translate3d(100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 1, expr: \"* => left, * => right, left => center, right => center\", animation: { type: 4, styles: null, timings: \"500ms cubic-bezier(0.35, 0, 0.25, 1)\" }, options: null }, { type: 1, expr: \"void => left-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"500ms cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }, { type: 1, expr: \"void => right-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"500ms cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }], options: {} }] } });\nexport { RenderType_MatTabBody as RenderType_MatTabBody };\nfunction View_MatTabBody_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTabBody_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _portalHost: 0 }), (_l()(), i0.ɵeld(1, 0, [[\"content\", 1]], null, 2, \"div\", [[\"class\", \"mat-tab-body-content\"]], [[24, \"@translateTab\", 0]], [[null, \"@translateTab.start\"], [null, \"@translateTab.done\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"@translateTab.start\" === en)) {\n        var pd_0 = (_co._onTranslateTabStarted($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"@translateTab.done\" === en)) {\n        var pd_1 = (_co._onTranslateTabComplete($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabBody_1)), i0.ɵdid(3, 212992, null, 0, i1.MatTabBodyPortal, [i0.ComponentFactoryResolver, i0.ViewContainerRef, i1.MatTabBody], null, null)], function (_ck, _v) { _ck(_v, 3, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._position; _ck(_v, 1, 0, currVal_0); }); }\nexport function View_MatTabBody_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"]], null, null, null, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabBodyNgFactory = i0.ɵccf(\"mat-tab-body\", i1.MatTabBody, View_MatTabBody_Host_0, { _content: \"content\", origin: \"origin\", position: \"position\" }, { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, []);\nexport { MatTabBodyNgFactory as MatTabBodyNgFactory };\nvar styles_MatTabHeader = [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}\"];\nvar RenderType_MatTabHeader = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabHeader, data: {} });\nexport { RenderType_MatTabHeader as RenderType_MatTabHeader };\nexport function View_MatTabHeader_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), i0.ɵqud(402653184, 2, { _tabListContainer: 0 }), i0.ɵqud(402653184, 3, { _tabList: 0 }), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._scrollHeader(\"before\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(4, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, [[2, 0], [\"tabListContainer\", 1]], null, 6, \"div\", [[\"class\", \"mat-tab-label-container\"]], null, [[null, \"keydown\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"keydown\" === en)) {\n        var pd_0 = (_co._handleKeydown($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(7, 0, [[3, 0], [\"tabList\", 1]], null, 5, \"div\", [[\"class\", \"mat-tab-list\"], [\"role\", \"tablist\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._onContentChanges() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(8, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"div\", [[\"class\", \"mat-tab-labels\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(12, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null), (_l()(), i0.ɵeld(13, 0, null, null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._scrollHeader(\"after\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(14, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i8.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i10.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(15, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = (_co._disableScrollBefore || _co.disableRipple); _ck(_v, 4, 0, currVal_2); var currVal_5 = (_co._disableScrollAfter || _co.disableRipple); _ck(_v, 14, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._disableScrollBefore; var currVal_1 = i0.ɵnov(_v, 4).unbounded; _ck(_v, 3, 0, currVal_0, currVal_1); var currVal_3 = _co._disableScrollAfter; var currVal_4 = i0.ɵnov(_v, 14).unbounded; _ck(_v, 13, 0, currVal_3, currVal_4); }); }\nexport function View_MatTabHeader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], null, null, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i11.ViewportRuler, [2, i4.Directionality], i0.NgZone], null, null), i0.ɵqud(603979776, 1, { _labelWrappers: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 1)._getLayoutDirection() == \"rtl\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabHeaderNgFactory = i0.ɵccf(\"mat-tab-header\", i1.MatTabHeader, View_MatTabHeader_Host_0, { disableRipple: \"disableRipple\", selectedIndex: \"selectedIndex\" }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, [\"*\"]);\nexport { MatTabHeaderNgFactory as MatTabHeaderNgFactory };\nvar styles_MatTab = [];\nvar RenderType_MatTab = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTab, data: {} });\nexport { RenderType_MatTab as RenderType_MatTab };\nfunction View_MatTab_1(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0), (_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTab_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _implicitContent: 0 }), (_l()(), i0.ɵand(0, [[1, 2]], null, 0, null, View_MatTab_1))], null, null); }\nexport function View_MatTab_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 3, \"mat-tab\", [], null, null, null, View_MatTab_0, RenderType_MatTab)), i0.ɵdid(1, 770048, null, 2, i1.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(335544320, 1, { templateLabel: 0 }), i0.ɵqud(335544320, 2, { _explicitContent: 0 })], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabNgFactory = i0.ɵccf(\"mat-tab\", i1.MatTab, View_MatTab_Host_0, { disabled: \"disabled\", textLabel: \"label\", ariaLabel: \"aria-label\", ariaLabelledby: \"aria-labelledby\" }, {}, [\"*\"]);\nexport { MatTabNgFactory as MatTabNgFactory };\nvar styles_MatTabNav = [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"];\nvar RenderType_MatTabNav = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabNav, data: {} });\nexport { RenderType_MatTabNav as RenderType_MatTabNav };\nexport function View_MatTabNav_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-links\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._alignInkBar() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(2, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(5, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null)], null, null); }\nexport function View_MatTabNav_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"mat-tab-nav-bar\"], [\"mat-tab-nav-bar\", \"\"]], null, null, null, View_MatTabNav_0, RenderType_MatTabNav)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabNav, [i0.ElementRef, [2, i4.Directionality], i0.NgZone, i0.ChangeDetectorRef, i11.ViewportRuler], null, null), i0.ɵqud(603979776, 1, { _tabLinks: 1 })], null, null); }\nvar MatTabNavNgFactory = i0.ɵccf(\"[mat-tab-nav-bar]\", i1.MatTabNav, View_MatTabNav_Host_0, { color: \"color\", disableRipple: \"disableRipple\", backgroundColor: \"backgroundColor\" }, {}, [\"*\"]);\nexport { MatTabNavNgFactory as MatTabNavNgFactory };\n","<mat-tab-header #tabHeader [selectedIndex]=\"selectedIndex\" [disableRipple]=\"disableRipple\" (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"><div class=\"mat-tab-label\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [attr.tabIndex]=\"_getTabIndex(tab, i)\" [attr.aria-posinset]=\"i + 1\" [attr.aria-setsize]=\"_tabs.length\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [attr.aria-label]=\"tab.ariaLabel || null\" [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" [matRippleDisabled]=\"tab.disabled || disableRipple\" (click)=\"_handleClick(tab, tabHeader, i)\"><div class=\"mat-tab-label-content\"><ng-template [ngIf]=\"tab.templateLabel\"><ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template></ng-template><ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\"mat-tab-body-wrapper\" #tabBodyWrapper><mat-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" (_onCentered)=\"_removeTabBodyWrapperHeight()\" (_onCentering)=\"_setTabBodyWrapperHeight($event)\"></mat-tab-body></div>","<div class=\"mat-tab-body-content\" #content [@translateTab]=\"_position\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_onTranslateTabComplete($event)\"><ng-template matTabBodyHost></ng-template></div>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_scrollHeader('before')\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div class=\"mat-tab-list\" #tabList role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-labels\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (click)=\"_scrollHeader('after')\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<ng-template><ng-content></ng-content></ng-template>","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardContent = /** @class */ (function () {\n    function MatCardContent() {\n    }\n    MatCardContent.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-card-content',\n                    host: { 'class': 'mat-card-content' }\n                },] },\n    ];\n    return MatCardContent;\n}());\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardTitle = /** @class */ (function () {\n    function MatCardTitle() {\n    }\n    MatCardTitle.decorators = [\n        { type: Directive, args: [{\n                    selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n                    host: {\n                        'class': 'mat-card-title'\n                    }\n                },] },\n    ];\n    return MatCardTitle;\n}());\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardSubtitle = /** @class */ (function () {\n    function MatCardSubtitle() {\n    }\n    MatCardSubtitle.decorators = [\n        { type: Directive, args: [{\n                    selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n                    host: {\n                        'class': 'mat-card-subtitle'\n                    }\n                },] },\n    ];\n    return MatCardSubtitle;\n}());\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardActions = /** @class */ (function () {\n    function MatCardActions() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n    MatCardActions.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-card-actions',\n                        '[class.mat-card-actions-align-end]': 'align === \"end\"',\n                    }\n                },] },\n    ];\n    MatCardActions.propDecorators = {\n        align: [{ type: Input }]\n    };\n    return MatCardActions;\n}());\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardFooter = /** @class */ (function () {\n    function MatCardFooter() {\n    }\n    MatCardFooter.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-card-footer' }\n                },] },\n    ];\n    return MatCardFooter;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardImage = /** @class */ (function () {\n    function MatCardImage() {\n    }\n    MatCardImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-card-image' }\n                },] },\n    ];\n    return MatCardImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardSmImage = /** @class */ (function () {\n    function MatCardSmImage() {\n    }\n    MatCardSmImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-card-sm-image' }\n                },] },\n    ];\n    return MatCardSmImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardMdImage = /** @class */ (function () {\n    function MatCardMdImage() {\n    }\n    MatCardMdImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-card-md-image' }\n                },] },\n    ];\n    return MatCardMdImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardLgImage = /** @class */ (function () {\n    function MatCardLgImage() {\n    }\n    MatCardLgImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-card-lg-image' }\n                },] },\n    ];\n    return MatCardLgImage;\n}());\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardXlImage = /** @class */ (function () {\n    function MatCardXlImage() {\n    }\n    MatCardXlImage.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-card-xl-image' }\n                },] },\n    ];\n    return MatCardXlImage;\n}());\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardAvatar = /** @class */ (function () {\n    function MatCardAvatar() {\n    }\n    MatCardAvatar.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-card-avatar' }\n                },] },\n    ];\n    return MatCardAvatar;\n}());\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nvar MatCard = /** @class */ (function () {\n    function MatCard() {\n    }\n    MatCard.decorators = [\n        { type: Component, args: [{selector: 'mat-card',\n                    exportAs: 'matCard',\n                    template: \"<ng-content></ng-content><ng-content select=\\\"mat-card-footer\\\"></ng-content>\",\n                    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media screen and (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px 0}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-title{margin-bottom:8px}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card' }\n                },] },\n    ];\n    return MatCard;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nvar MatCardHeader = /** @class */ (function () {\n    function MatCardHeader() {\n    }\n    MatCardHeader.decorators = [\n        { type: Component, args: [{selector: 'mat-card-header',\n                    template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content><div class=\\\"mat-card-header-text\\\"><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content></ng-content>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card-header' }\n                },] },\n    ];\n    return MatCardHeader;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nvar MatCardTitleGroup = /** @class */ (function () {\n    function MatCardTitleGroup() {\n    }\n    MatCardTitleGroup.decorators = [\n        { type: Component, args: [{selector: 'mat-card-title-group',\n                    template: \"<div><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content select=\\\"img\\\"></ng-content><ng-content></ng-content>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-card-title-group' }\n                },] },\n    ];\n    return MatCardTitleGroup;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MatCardModule = /** @class */ (function () {\n    function MatCardModule() {\n    }\n    MatCardModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule],\n                    exports: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                        MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                        MatCardXlImage, MatCardAvatar,\n                    ],\n                },] },\n    ];\n    return MatCardModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };\n//# sourceMappingURL=card.es5.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/cdk/bidi\";\nimport * as i3 from \"@angular/material/core\";\nimport * as i4 from \"@angular/platform-browser\";\nvar MatCardModuleNgFactory = i0.ɵcmf(i1.MatCardModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(1073742336, i2.BidiModule, i2.BidiModule, []), i0.ɵmpd(1073742336, i3.MatCommonModule, i3.MatCommonModule, [[2, i3.MATERIAL_SANITY_CHECKS], [2, i4.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i1.MatCardModule, i1.MatCardModule, [])]); });\nexport { MatCardModuleNgFactory as MatCardModuleNgFactory };\nvar styles_MatCard = [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media screen and (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px 0}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-title{margin-bottom:8px}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"];\nvar RenderType_MatCard = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCard, data: {} });\nexport { RenderType_MatCard as RenderType_MatCard };\nexport function View_MatCard_0(_l) { return i0.ɵvid(2, [i0.ɵncd(null, 0), i0.ɵncd(null, 1)], null, null); }\nexport function View_MatCard_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card\", [[\"class\", \"mat-card\"]], null, null, null, View_MatCard_0, RenderType_MatCard)), i0.ɵdid(1, 49152, null, 0, i1.MatCard, [], null, null)], null, null); }\nvar MatCardNgFactory = i0.ɵccf(\"mat-card\", i1.MatCard, View_MatCard_Host_0, {}, {}, [\"*\", \"mat-card-footer\"]);\nexport { MatCardNgFactory as MatCardNgFactory };\nvar styles_MatCardHeader = [];\nvar RenderType_MatCardHeader = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCardHeader, data: {} });\nexport { RenderType_MatCardHeader as RenderType_MatCardHeader };\nexport function View_MatCardHeader_0(_l) { return i0.ɵvid(2, [i0.ɵncd(null, 0), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"div\", [[\"class\", \"mat-card-header-text\"]], null, null, null, null, null)), i0.ɵncd(null, 1), i0.ɵncd(null, 2)], null, null); }\nexport function View_MatCardHeader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card-header\", [[\"class\", \"mat-card-header\"]], null, null, null, View_MatCardHeader_0, RenderType_MatCardHeader)), i0.ɵdid(1, 49152, null, 0, i1.MatCardHeader, [], null, null)], null, null); }\nvar MatCardHeaderNgFactory = i0.ɵccf(\"mat-card-header\", i1.MatCardHeader, View_MatCardHeader_Host_0, {}, {}, [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"]);\nexport { MatCardHeaderNgFactory as MatCardHeaderNgFactory };\nvar styles_MatCardTitleGroup = [];\nvar RenderType_MatCardTitleGroup = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCardTitleGroup, data: {} });\nexport { RenderType_MatCardTitleGroup as RenderType_MatCardTitleGroup };\nexport function View_MatCardTitleGroup_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], null, null, null, null, null)), i0.ɵncd(null, 0), i0.ɵncd(null, 1), i0.ɵncd(null, 2)], null, null); }\nexport function View_MatCardTitleGroup_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-card-title-group\", [[\"class\", \"mat-card-title-group\"]], null, null, null, View_MatCardTitleGroup_0, RenderType_MatCardTitleGroup)), i0.ɵdid(1, 49152, null, 0, i1.MatCardTitleGroup, [], null, null)], null, null); }\nvar MatCardTitleGroupNgFactory = i0.ɵccf(\"mat-card-title-group\", i1.MatCardTitleGroup, View_MatCardTitleGroup_Host_0, {}, {}, [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"]);\nexport { MatCardTitleGroupNgFactory as MatCardTitleGroupNgFactory };\n","<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../node_modules/@angular/material/tabs/typings/index.ngfactory\";\nimport * as i2 from \"@angular/material/tabs\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code.component\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"./pretty-printer.service\";\nimport * as i7 from \"../../shared/copier.service\";\nimport * as i8 from \"../../shared/logger.service\";\nimport * as i9 from \"../../../../node_modules/@angular/material/card/typings/index.ngfactory\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"./code-tabs.component\";\nvar styles_CodeTabsComponent = [];\nvar RenderType_CodeTabsComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CodeTabsComponent, data: {} });\nexport { RenderType_CodeTabsComponent as RenderType_CodeTabsComponent };\nfunction View_CodeTabsComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], [[8, \"className\", 0]], null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.parent.context.$implicit.class, \"\"); _ck(_v, 0, 0, currVal_0); var currVal_1 = _v.parent.context.$implicit.header; _ck(_v, 1, 0, currVal_1); }); }\nfunction View_CodeTabsComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 7, \"mat-tab\", [[\"style\", \"overflow-y: hidden;\"]], null, null, null, i1.View_MatTab_0, i1.RenderType_MatTab)), i0.ɵdid(1, 770048, [[3, 4]], 2, i2.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(335544320, 4, { templateLabel: 0 }), i0.ɵqud(335544320, 5, { _explicitContent: 0 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_CodeTabsComponent_2)), i0.ɵdid(5, 16384, [[4, 4]], 0, i2.MatTabLabel, [i0.TemplateRef, i0.ViewContainerRef], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 1, \"aio-code\", [], [[8, \"className\", 0]], null, null, i3.View_CodeComponent_0, i3.RenderType_CodeComponent)), i0.ɵdid(7, 573440, [[2, 4]], 0, i4.CodeComponent, [i5.MatSnackBar, i6.PrettyPrinter, i7.CopierService, i8.Logger], { language: [0, \"language\"], linenums: [1, \"linenums\"], path: [2, \"path\"], region: [3, \"region\"], header: [4, \"header\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { _ck(_v, 1, 0); var currVal_1 = _v.context.$implicit.language; var currVal_2 = _v.context.$implicit.linenums; var currVal_3 = _v.context.$implicit.path; var currVal_4 = _v.context.$implicit.region; var currVal_5 = _v.context.$implicit.header; _ck(_v, 7, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.context.$implicit.class, \"\"); _ck(_v, 6, 0, currVal_0); }); }\nexport function View_CodeTabsComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { content: 0 }), i0.ɵqud(671088640, 2, { codeComponents: 1 }), (_l()(), i0.ɵeld(2, 0, [[1, 0], [\"content\", 1]], null, 1, \"div\", [[\"style\", \"display: none\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 6, \"mat-card\", [[\"class\", \"mat-card\"]], null, null, null, i9.View_MatCard_0, i9.RenderType_MatCard)), i0.ɵdid(5, 49152, null, 0, i10.MatCard, [], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 4, \"mat-tab-group\", [[\"class\", \"code-tab-group mat-tab-group\"], [\"disableRipple\", \"\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, i1.View_MatTabGroup_0, i1.RenderType_MatTabGroup)), i0.ɵdid(7, 3325952, null, 1, i2.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef], { disableRipple: [0, \"disableRipple\"] }, null), i0.ɵqud(603979776, 3, { _tabs: 1 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CodeTabsComponent_1)), i0.ɵdid(10, 278528, null, 0, i11.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = \"\"; _ck(_v, 7, 0, currVal_2); var currVal_3 = _co.tabs; _ck(_v, 10, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 7).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 7).headerPosition === \"below\"); _ck(_v, 6, 0, currVal_0, currVal_1); }); }\nexport function View_CodeTabsComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"code-tabs\", [], null, null, null, View_CodeTabsComponent_0, RenderType_CodeTabsComponent)), i0.ɵdid(1, 4308992, null, 0, i12.CodeTabsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CodeTabsComponentNgFactory = i0.ɵccf(\"code-tabs\", i12.CodeTabsComponent, View_CodeTabsComponent_Host_0, { linenums: \"linenums\" }, {}, [\"*\"]);\nexport { CodeTabsComponentNgFactory as CodeTabsComponentNgFactory };\n","\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./code-tabs.module\";\nimport * as i2 from \"../../../../node_modules/@angular/material/snack-bar/typings/index.ngfactory\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code-tabs.component.ngfactory\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/cdk/observers\";\nimport * as i7 from \"@angular/cdk/overlay\";\nimport * as i8 from \"@angular/cdk/bidi\";\nimport * as i9 from \"./pretty-printer.service\";\nimport * as i10 from \"../../shared/logger.service\";\nimport * as i11 from \"../../shared/copier.service\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/platform-browser\";\nimport * as i14 from \"@angular/material/card\";\nimport * as i15 from \"@angular/cdk/portal\";\nimport * as i16 from \"@angular/cdk/platform\";\nimport * as i17 from \"@angular/cdk/a11y\";\nimport * as i18 from \"@angular/material/tabs\";\nimport * as i19 from \"@angular/cdk/scrolling\";\nimport * as i20 from \"@angular/material/button\";\nimport * as i21 from \"@angular/material/snack-bar\";\nimport * as i22 from \"./code.module\";\nvar CodeTabsModuleNgFactory = i0.ɵcmf(i1.CodeTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.MatSnackBarContainerNgFactory, i2.SimpleSnackBarNgFactory, i3.CodeComponentNgFactory, i4.CodeTabsComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i5.NgLocalization, i5.NgLocaleLocalization, [i0.LOCALE_ID, [2, i5.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i6.MutationObserverFactory, i6.MutationObserverFactory, []), i0.ɵmpd(4608, i7.Overlay, i7.Overlay, [i7.ScrollStrategyOptions, i7.OverlayContainer, i0.ComponentFactoryResolver, i7.OverlayPositionBuilder, i7.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i5.DOCUMENT, i8.Directionality, [2, i5.Location]]), i0.ɵmpd(5120, i7.ɵc, i7.ɵd, [i7.Overlay]), i0.ɵmpd(4608, i9.PrettyPrinter, i9.PrettyPrinter, [i10.Logger]), i0.ɵmpd(4608, i11.CopierService, i11.CopierService, []), i0.ɵmpd(1073742336, i5.CommonModule, i5.CommonModule, []), i0.ɵmpd(1073742336, i8.BidiModule, i8.BidiModule, []), i0.ɵmpd(1073742336, i12.MatCommonModule, i12.MatCommonModule, [[2, i12.MATERIAL_SANITY_CHECKS], [2, i13.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i14.MatCardModule, i14.MatCardModule, []), i0.ɵmpd(1073742336, i15.PortalModule, i15.PortalModule, []), i0.ɵmpd(1073742336, i16.PlatformModule, i16.PlatformModule, []), i0.ɵmpd(1073742336, i12.MatRippleModule, i12.MatRippleModule, []), i0.ɵmpd(1073742336, i6.ObserversModule, i6.ObserversModule, []), i0.ɵmpd(1073742336, i17.A11yModule, i17.A11yModule, []), i0.ɵmpd(1073742336, i18.MatTabsModule, i18.MatTabsModule, []), i0.ɵmpd(1073742336, i19.ScrollingModule, i19.ScrollingModule, []), i0.ɵmpd(1073742336, i7.OverlayModule, i7.OverlayModule, []), i0.ɵmpd(1073742336, i20.MatButtonModule, i20.MatButtonModule, []), i0.ɵmpd(1073742336, i21.MatSnackBarModule, i21.MatSnackBarModule, []), i0.ɵmpd(1073742336, i22.CodeModule, i22.CodeModule, []), i0.ɵmpd(1073742336, i1.CodeTabsModule, i1.CodeTabsModule, [])]); });\nexport { CodeTabsModuleNgFactory as CodeTabsModuleNgFactory };\n"],"sourceRoot":""}